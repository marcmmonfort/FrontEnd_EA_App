{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nexport var AuthHeaderService = function () {\n  function AuthHeaderService() {\n    _classCallCheck(this, AuthHeaderService);\n  }\n  _createClass(AuthHeaderService, null, [{\n    key: \"authHeader\",\n    value: function () {\n      var _authHeader = _asyncToGenerator(function* () {\n        try {\n          var tokenData = yield AsyncStorage.getItem('token');\n          console.log(\"Remix AAAAAAAAAAAAAAAAAA (raw value):\", tokenData);\n          if (tokenData) {\n            var token = JSON.parse(tokenData);\n            console.log(\"Estoy enseñando el token:\" + token);\n            console.log(\"Remix AAAAAAAAAAAAAAAAAA (parsed value):\", JSON.parse(tokenData));\n            return {\n              Authorization: 'Bearer ' + token\n            };\n          } else console.log(\"Token not found\");\n        } catch (error) {\n          console.error(\"Error al obtener el usuario actual:\", error);\n        }\n      });\n      function authHeader() {\n        return _authHeader.apply(this, arguments);\n      }\n      return authHeader;\n    }()\n  }]);\n  return AuthHeaderService;\n}();","map":{"version":3,"names":["AsyncStorage","AuthHeaderService","_classCallCheck","_createClass","key","value","_authHeader","_asyncToGenerator","tokenData","getItem","console","log","token","JSON","parse","Authorization","error","authHeader","apply","arguments"],"sources":["C:/Users/eloim/OneDrive/Uni/4B/EA/ProyectoEA/Frontend_/FrontEnd_EA_App/src/infrastructure/services/user/authHeaders.service.ts"],"sourcesContent":["import AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nexport class AuthHeaderService{\r\n    static async authHeader(){\r\n        try{\r\n        const tokenData=await AsyncStorage.getItem('token');\r\n        console.log(\"Remix AAAAAAAAAAAAAAAAAA (raw value):\", tokenData);\r\n        if (tokenData) {\r\n            const token = JSON.parse(tokenData);\r\n            console.log(\"Estoy enseñando el token:\"+token);\r\n            console.log(\"Remix AAAAAAAAAAAAAAAAAA (parsed value):\", JSON.parse(tokenData));\r\n            return { Authorization: 'Bearer ' + token }; // for Spring Boot back-end\r\n        }\r\n        else(console.log(\"Token not found\"));\r\n    } catch (error: any) {\r\n      console.error(\"Error al obtener el usuario actual:\", error);\r\n    }\r\n}\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,YAAY,MAAM,2CAA2C;AACpE,WAAaC,iBAAiB;EAAA,SAAAA,kBAAA;IAAAC,eAAA,OAAAD,iBAAA;EAAA;EAAAE,YAAA,CAAAF,iBAAA;IAAAG,GAAA;IAAAC,KAAA;MAAA,IAAAC,WAAA,GAAAC,iBAAA,CAC1B,aAAyB;QACrB,IAAG;UACH,IAAMC,SAAS,SAAOR,YAAY,CAACS,OAAO,CAAC,OAAO,CAAC;UACnDC,OAAO,CAACC,GAAG,CAAC,uCAAuC,EAAEH,SAAS,CAAC;UAC/D,IAAIA,SAAS,EAAE;YACX,IAAMI,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACN,SAAS,CAAC;YACnCE,OAAO,CAACC,GAAG,CAAC,2BAA2B,GAACC,KAAK,CAAC;YAC9CF,OAAO,CAACC,GAAG,CAAC,0CAA0C,EAAEE,IAAI,CAACC,KAAK,CAACN,SAAS,CAAC,CAAC;YAC9E,OAAO;cAAEO,aAAa,EAAE,SAAS,GAAGH;YAAM,CAAC;UAC/C,CAAC,MACIF,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;QACvC,CAAC,CAAC,OAAOK,KAAU,EAAE;UACnBN,OAAO,CAACM,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;QAC7D;MACJ,CAAC;MAAA,SAAAC,WAAA;QAAA,OAAAX,WAAA,CAAAY,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAF,UAAA;IAAA;EAAA;EAAA,OAAAhB,iBAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}