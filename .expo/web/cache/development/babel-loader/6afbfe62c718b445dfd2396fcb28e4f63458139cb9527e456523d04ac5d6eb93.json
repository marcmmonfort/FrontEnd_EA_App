{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { GiftedChat } from \"react-native-gifted-chat\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport socketIOClient from \"socket.io-client\";\nimport { useRoute } from \"@react-navigation/native\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar ChatB = function ChatB() {\n  var peerRef = useRef();\n  var socketRef = useRef();\n  var otherUser = useRef();\n  var sendChannel = useRef();\n  var route = useRoute();\n  var _ref = route.params || {},\n    roomID = _ref.roomID;\n  console.log(\"Mi Room ID es: \" + roomID);\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    messages = _useState2[0],\n    setMessages = _useState2[1];\n  useEffect(function () {\n    try {\n      console.log(\"hola\");\n      socketRef.current = socketIOClient('http://localhost:3000');\n      console.log('Socket:  ' + socketRef.current);\n    } catch (error) {\n      console.log(\"Error connecting with signal server\");\n    }\n    try {\n      if (socketRef.current) {\n        socketRef.current.emit(\"join room\", roomID);\n        console.log(\"RoomID:  \" + roomID);\n        console.log(\"estoy aqui\");\n      } else {\n        console.log(\"socketRef.current void\");\n      }\n    } catch (error) {\n      console.log(\"Cannot connect to room\");\n    }\n    try {\n      if (socketRef.current) {\n        console.log(\"Waiting...\");\n        socketRef.current.on(\"other user\", function (userID) {\n          console.log('UserID: ' + userID);\n          callUser(userID);\n          otherUser.current = userID;\n        });\n      } else {\n        console.log(\"socketRef.current void\");\n      }\n    } catch (error) {\n      console.log(\"Error on waiting the other peer\");\n    }\n    if (socketRef.current) {\n      socketRef.current.on(\"user joined\", function (userID) {\n        otherUser.current = userID;\n      });\n      socketRef.current.on(\"offer\", handleOffer);\n      console.log(\"ey\");\n      socketRef.current.on(\"answer\", handleAnswer);\n      socketRef.current.on(\"ice-candidate\", handleNewICECandidateMsg);\n    }\n  }, []);\n  function callUser(userID) {\n    console.log(\"[INFO] Initiated a call\");\n    try {\n      console.log(\"try de call user...\");\n      console.log(\"usus:  \" + userID);\n      peerRef.current = Peer(userID);\n      console.log(\"peer:  \" + peerRef.current);\n      sendChannel.current = peerRef.current.createDataChannel(\"sendChannel\");\n      if (sendChannel.current) sendChannel.current.onmessage = handleReceiveMessage;\n    } catch (error) {\n      console.log(\"error on callUser\");\n    }\n  }\n  function Peer(userID) {\n    console.log(\"ayo\");\n    var peer = new RTCPeerConnection({\n      iceServers: [{\n        urls: \"stun:stun.stunprotocol.org\"\n      }, {\n        urls: 'turn:numb.viagenie.ca',\n        credential: 'muazkh',\n        username: 'webrtc@live.com'\n      }]\n    });\n    console.log(\"ayo2\");\n    peer.onicecandidate = handleICECandidateEvent;\n    peer.onnegotiationneeded = function () {\n      return handleNegotiationNeededEvent(userID);\n    };\n    return peer;\n  }\n  function handleNegotiationNeededEvent(userID) {\n    peerRef.current.createOffer().then(function (offer) {\n      return peerRef.current.setLocalDescription(offer);\n    }).then(function () {\n      var _socketRef$current, _socketRef$current2;\n      var payload = {\n        target: userID,\n        caller: (_socketRef$current = socketRef.current) == null ? void 0 : _socketRef$current.id,\n        sdp: peerRef.current.localDescription\n      };\n      (_socketRef$current2 = socketRef.current) == null ? void 0 : _socketRef$current2.emit(\"offer\", payload);\n    }).catch(function (err) {\n      return console.log(\"Error handling negotiation needed event\", err);\n    });\n  }\n  function handleOffer(incoming) {\n    console.log(\"[INFO] Handling Offer\");\n    peerRef.current = Peer(incoming.caller);\n    peerRef.current.ondatachannel = function (event) {\n      sendChannel.current = event.channel;\n      if (sendChannel.current) {\n        sendChannel.current.onmessage = handleReceiveMessage;\n      }\n      console.log(\"[SUCCESS] Connection established\");\n    };\n    var desc = new RTCSessionDescription(incoming.sdp);\n    peerRef.current.setRemoteDescription(desc).then(function () {}).then(function () {\n      return peerRef.current.createAnswer();\n    }).then(function (answer) {\n      return peerRef.current.setLocalDescription(answer);\n    }).then(function () {\n      var _socketRef$current3;\n      var payload = {\n        target: incoming.caller,\n        caller: (_socketRef$current3 = socketRef.current) == null ? void 0 : _socketRef$current3.id,\n        sdp: peerRef.current.localDescription\n      };\n      if (socketRef.current) {\n        var _socketRef$current4;\n        (_socketRef$current4 = socketRef.current) == null ? void 0 : _socketRef$current4.emit(\"answer\", payload);\n      }\n    });\n  }\n  function handleAnswer(message) {\n    if (message && peerRef.current) {\n      var desc = new RTCSessionDescription(message.sdp);\n      peerRef.current.setRemoteDescription(desc).catch(function (e) {\n        return console.log(\"Error handle answer\", e);\n      });\n    } else {\n      console.log(\"Problems handling answer\");\n    }\n  }\n  function handleReceiveMessage(e) {\n    console.log(\"[INFO] Message received from peer\", e.data);\n    var msg = [{\n      _id: Math.floor(Math.random() * 1000).toString(),\n      text: e.data,\n      createdAt: new Date(),\n      user: {\n        _id: 2\n      }\n    }];\n    setMessages(function (previousMessages) {\n      return GiftedChat.append(previousMessages, msg);\n    });\n  }\n  function handleICECandidateEvent(e) {\n    if (e.candidate) {\n      var _socketRef$current5;\n      var payload = {\n        target: otherUser.current,\n        candidate: e.candidate\n      };\n      (_socketRef$current5 = socketRef.current) == null ? void 0 : _socketRef$current5.emit(\"ice-candidate\", payload);\n    }\n  }\n  function handleNewICECandidateMsg(incoming) {\n    console.log(\"HandlingnewIceCandidate\");\n    var candidate = new RTCIceCandidate(incoming);\n    console.log(\"Ice candidate: \" + candidate);\n    peerRef.current.addIceCandidate(candidate).catch(function (e) {\n      return console.log('Error:' + e);\n    });\n  }\n  function sendMessage() {\n    var messages = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    if (messages.length > 0) {\n      var _sendChannel$current;\n      console.log(\"Enviando mensaje\");\n      var text = messages[0].text;\n      console.log('Texto' + text);\n      (_sendChannel$current = sendChannel.current) == null ? void 0 : _sendChannel$current.send(text);\n      setMessages(function (previousMessages) {\n        return GiftedChat.append(previousMessages, messages);\n      });\n    }\n  }\n  return _jsx(GiftedChat, {\n    messages: messages,\n    onSend: function onSend(messages) {\n      return sendMessage(messages);\n    },\n    user: {\n      _id: 1\n    }\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    alignContent: \"center\"\n  },\n  textHeader: {\n    fontFamily: \"sans-serif\",\n    fontSize: 22,\n    alignSelf: \"center\",\n    marginTop: 20\n  }\n});\nexport default ChatB;","map":{"version":3,"names":["React","useState","useRef","useEffect","GiftedChat","StyleSheet","socketIOClient","useRoute","jsx","_jsx","ChatB","peerRef","socketRef","otherUser","sendChannel","route","_ref","params","roomID","console","log","_useState","_useState2","_slicedToArray","messages","setMessages","current","error","emit","on","userID","callUser","handleOffer","handleAnswer","handleNewICECandidateMsg","Peer","createDataChannel","onmessage","handleReceiveMessage","peer","RTCPeerConnection","iceServers","urls","credential","username","onicecandidate","handleICECandidateEvent","onnegotiationneeded","handleNegotiationNeededEvent","createOffer","then","offer","setLocalDescription","_socketRef$current","_socketRef$current2","payload","target","caller","id","sdp","localDescription","catch","err","incoming","ondatachannel","event","channel","desc","RTCSessionDescription","setRemoteDescription","createAnswer","answer","_socketRef$current3","_socketRef$current4","message","e","data","msg","_id","Math","floor","random","toString","text","createdAt","Date","user","previousMessages","append","candidate","_socketRef$current5","RTCIceCandidate","addIceCandidate","sendMessage","arguments","length","undefined","_sendChannel$current","send","onSend","styles","create","container","flex","justifyContent","alignItems","alignContent","textHeader","fontFamily","fontSize","alignSelf","marginTop"],"sources":["C:/Users/oscar/Desktop/proyecto/2005/FrontEnd_EA_app/my-project/src/infrastructure/UI/screens/Chat/chatB.screen.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect, useCallback } from \"react\";\r\nimport { GiftedChat, IMessage } from \"react-native-gifted-chat\";\r\nimport { Text, View, StyleSheet, TextInput, Button } from \"react-native\";\r\nimport { Socket, io } from \"socket.io-client\";\r\nimport socketIOClient from \"socket.io-client\";\r\n\r\nimport { RouteProp, useRoute } from \"@react-navigation/native\";\r\n\r\ninterface RouteParams {\r\n  roomID?: string;\r\n}\r\n\r\nconst ChatB = () => {\r\n  const peerRef = useRef<any>();\r\n  let socketRef = useRef<Socket | undefined>();\r\n  const otherUser = useRef<any>();\r\n  const sendChannel = useRef<RTCDataChannel | undefined>(); //Data channel\r\n  const route = useRoute();\r\n  const {roomID}: RouteParams = route.params || {};\r\n  console.log(\"Mi Room ID es: \"+roomID)\r\n  const [messages, setMessages] = useState([]); // Chats between the peers will be stored here\r\n  useEffect(() => {\r\n    // Step 1: Connect with the Signal server\r\n\r\n    try {\r\n      console.log(\"hola\")\r\n      //socketRef.current = socketIOClient('http://147.83.7.158:3000'); // Address of the Signal server REVISAR\r\n      socketRef.current = socketIOClient('http://localhost:3000');\r\n      console.log('Socket:  '+socketRef.current);\r\n    } catch (error) {\r\n      console.log(\"Error connecting with signal server\");\r\n    }\r\n    // Step 2: Join the room. If initiator we will create a new room otherwise we will join a room\r\n    try {\r\n      if (socketRef.current) {\r\n        socketRef.current.emit(\"join room\", roomID); // Room ID\r\n        console.log(\"RoomID:  \"+roomID)\r\n        console.log(\"estoy aqui\")\r\n      } else {\r\n        console.log(\"socketRef.current void\");\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Cannot connect to room\");\r\n    }\r\n\r\n    // Step 3: Waiting for the other peer to join the room\r\n    try {\r\n      if (socketRef.current) {\r\n        console.log(\"Waiting...\")\r\n        //console.log(socketRef.current);\r\n\r\n        socketRef.current.on(\"other user\", (userID) => {\r\n          console.log('UserID: '+userID)\r\n          callUser(userID);\r\n          otherUser.current = userID;\r\n        });\r\n      } else {\r\n        console.log(\"socketRef.current void\");\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error on waiting the other peer\");\r\n    }\r\n\r\n    // Signals that both peers have joined the room\r\n    if(socketRef.current){\r\n    socketRef.current.on(\"user joined\", userID => {\r\n      otherUser.current = userID;\r\n    });\r\n\r\n    socketRef.current.on(\"offer\", handleOffer);\r\n    console.log(\"ey\")\r\n    \r\n    socketRef.current.on(\"answer\", handleAnswer);\r\n\r\n    socketRef.current.on(\"ice-candidate\", handleNewICECandidateMsg);}\r\n    /*try {\r\n      if (socketRef.current)\r\n        socketRef.current.on(\"user joined\", (userID) => {\r\n          otherUser.current = userID;\r\n        });\r\n      else {\r\n        console.log(\"socketRef.current void\");\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error signalling joining\");\r\n    }\r\n\r\n    try {\r\n      if (socketRef.current) socketRef.current.on(\"offer\", handleOffer);\r\n      else {\r\n        console.log(\"socketRef.current void\");\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error signalling offering\");\r\n    }\r\n\r\n    try {\r\n      if (socketRef.current) socketRef.current.on(\"answer\", handleAnswer);\r\n      else {\r\n        console.log(\"socketRef.current void\");\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error signalling answering\");\r\n    }\r\n\r\n    try {\r\n      if (socketRef.current)\r\n        socketRef.current.on(\"ice-candidate\", handleNewICECandidateMsg);\r\n      else {\r\n        console.log(\"socketRef.current void\");\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error signalling\");\r\n    }*/\r\n  }, []);\r\n\r\n  function callUser(userID: any) {\r\n    // This will initiate the call for the receiving peer\r\n    console.log(\"[INFO] Initiated a call\");\r\n    try {\r\n      console.log(\"try de call user...\")\r\n        console.log(\"usus:  \"+userID)\r\n        peerRef.current = Peer(userID);\r\n        console.log(\"peer:  \"+peerRef.current)\r\n        sendChannel.current = peerRef.current.createDataChannel(\"sendChannel\");\r\n        if (sendChannel.current)\r\n          // listen to incoming messages from other peer\r\n          sendChannel.current.onmessage = handleReceiveMessage;\r\n      \r\n    } catch (error) {\r\n      console.log(\"error on callUser\");\r\n    }\r\n  }\r\n\r\n  function Peer(userID: string) {\r\n    console.log(\"ayo\")\r\n    const peer = new RTCPeerConnection({\r\n      iceServers: [\r\n        {\r\n          //urls: \"stun:147.83.7.158:3478\",\r\n          urls: \"stun:stun.stunprotocol.org\"\r\n        },\r\n        {\r\n          urls: 'turn:numb.viagenie.ca',\r\n              credential: 'muazkh',\r\n              username: 'webrtc@live.com'\r\n          /*urls: \"147.83.7.158:3478\",\r\n          credential: \"oursecret\",\r\n          username: \"coturn\",*/\r\n        },\r\n      ],\r\n    });\r\n    console.log(\"ayo2\")\r\n    peer.onicecandidate = handleICECandidateEvent;\r\n    peer.onnegotiationneeded = () => handleNegotiationNeededEvent(userID);\r\n    return peer;\r\n  } //Puede dar problemas\r\n\r\n  function handleNegotiationNeededEvent(userID: string) {\r\n    // Offer made by the initiating peer to the receiving peer.\r\n    peerRef.current\r\n      .createOffer()\r\n      .then((offer: RTCSessionDescriptionInit) => {\r\n        return peerRef.current.setLocalDescription(offer);\r\n      })\r\n      .then(() => {\r\n        const payload = {\r\n          target: userID,\r\n          caller: socketRef.current?.id,\r\n          sdp: peerRef.current.localDescription,\r\n        };\r\n        socketRef.current?.emit(\"offer\", payload);\r\n      })\r\n      .catch((err: Error) =>\r\n        console.log(\"Error handling negotiation needed event\", err)\r\n      );\r\n  }\r\n\r\n  function handleOffer(incoming: any) {\r\n    //Here we are exchanging config information\r\n    //between the peers to establish communication\r\n\r\n    console.log(\"[INFO] Handling Offer\");\r\n    peerRef.current = Peer(incoming.caller); //Revisar\r\n    peerRef.current.ondatachannel = (event: any) => {\r\n      sendChannel.current = event.channel;\r\n      if (sendChannel.current) {\r\n        sendChannel.current.onmessage = handleReceiveMessage;\r\n      }\r\n\r\n      console.log(\"[SUCCESS] Connection established\");\r\n    };\r\n\r\n    //Session Description: It is the config information of the peer\r\n    //SDP stands for Session Description Protocol. The exchange\r\n    //of config information between the peers happens using this protocol\r\n\r\n    const desc = new RTCSessionDescription(incoming.sdp);\r\n\r\n    //Remote Description : Information about the other peer\r\n    //Local Description: Information about you 'current peer'\r\n\r\n    peerRef.current\r\n      .setRemoteDescription(desc)\r\n      .then(() => {})\r\n      .then(() => {\r\n        return peerRef.current.createAnswer();\r\n      })\r\n      .then((answer: any) => {\r\n        //revisar\r\n        return peerRef.current.setLocalDescription(answer);\r\n      })\r\n      .then(() => {\r\n        const payload = {\r\n          target: incoming.caller,\r\n          caller: socketRef.current?.id,\r\n          sdp: peerRef.current.localDescription,\r\n        };\r\n        if (socketRef.current) {\r\n          socketRef.current?.emit(\"answer\", payload);\r\n        }\r\n      });\r\n  } //Puede dar problemas\r\n\r\n  function handleAnswer(message: any) {\r\n    // Handle answer by the receiving peer\r\n    if (message && peerRef.current) {\r\n      const desc = new RTCSessionDescription(message.sdp); //PUEDE DAR PROBLEMAS\r\n      peerRef.current\r\n        .setRemoteDescription(desc)\r\n        .catch((e: any) => console.log(\"Error handle answer\", e));\r\n    } else {\r\n      console.log(\"Problems handling answer\");\r\n    }\r\n  }\r\n\r\n  function handleReceiveMessage(e: { data: any }) {\r\n    //revisar\r\n    // Listener for receiving messages from the peer\r\n    console.log(\"[INFO] Message received from peer\", e.data);\r\n    const msg = [\r\n      {\r\n        _id: Math.floor(Math.random() * 1000).toString(),\r\n        text: e.data,\r\n        createdAt: new Date(),\r\n        user: {\r\n          _id: 2,\r\n        },\r\n      },\r\n    ];\r\n    setMessages(\r\n      (previousMessages) =>\r\n        GiftedChat.append(previousMessages, msg) as unknown as never\r\n    ); //Revisar\r\n  }\r\n\r\n  function handleICECandidateEvent(e: any) {\r\n    //ICE stands for Interactive Connectivity Establishment. Using this\r\n    //peers exchange information over the internet. When establishing a\r\n    //connection between the peers, peers generally look for several\r\n    //ICE candidates and then decide which to choose best among possible\r\n    //candidates\r\n\r\n    if (e.candidate) {\r\n      const payload = {\r\n        target: otherUser.current,\r\n        candidate: e.candidate,\r\n      };\r\n      socketRef.current?.emit(\"ice-candidate\", payload);\r\n    }\r\n  }\r\n\r\n  function handleNewICECandidateMsg(incoming: any) {\r\n    console.log(\"HandlingnewIceCandidate\");\r\n    const candidate = new RTCIceCandidate(incoming);\r\n    console.log(\"Ice candidate: \" + candidate);\r\n    peerRef.current\r\n      .addIceCandidate(candidate)\r\n      .catch((e: any) => console.log('Error:'+e));\r\n  }\r\n\r\n  function sendMessage(messages = []) {\r\n    if (messages.length > 0) {\r\n      console.log(\"Enviando mensaje\");\r\n      const { text } = messages[0];\r\n      console.log('Texto'+text)\r\n      sendChannel.current?.send(text);\r\n      setMessages(\r\n        (previousMessages) =>\r\n          GiftedChat.append(previousMessages, messages) as unknown as never\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <GiftedChat\r\n      messages={messages}\r\n      onSend={(messages) => sendMessage(messages as never)}\r\n      user={{\r\n        _id: 1,\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    alignContent: \"center\",\r\n  },\r\n\r\n  textHeader: {\r\n    fontFamily: \"sans-serif\",\r\n    fontSize: 22,\r\n    alignSelf: \"center\",\r\n    marginTop: 20,\r\n  },\r\n});\r\nexport default ChatB;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAqB,OAAO;AACvE,SAASC,UAAU,QAAkB,0BAA0B;AAAC,OAAAC,UAAA;AAGhE,OAAOC,cAAc,MAAM,kBAAkB;AAE7C,SAAoBC,QAAQ,QAAQ,0BAA0B;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAM/D,IAAMC,KAAK,GAAG,SAARA,KAAKA,CAAA,EAAS;EAClB,IAAMC,OAAO,GAAGT,MAAM,CAAM,CAAC;EAC7B,IAAIU,SAAS,GAAGV,MAAM,CAAqB,CAAC;EAC5C,IAAMW,SAAS,GAAGX,MAAM,CAAM,CAAC;EAC/B,IAAMY,WAAW,GAAGZ,MAAM,CAA6B,CAAC;EACxD,IAAMa,KAAK,GAAGR,QAAQ,CAAC,CAAC;EACxB,IAAAS,IAAA,GAA8BD,KAAK,CAACE,MAAM,IAAI,CAAC,CAAC;IAAzCC,MAAM,GAAAF,IAAA,CAANE,MAAM;EACbC,OAAO,CAACC,GAAG,CAAC,iBAAiB,GAACF,MAAM,CAAC;EACrC,IAAAG,SAAA,GAAgCpB,QAAQ,CAAC,EAAE,CAAC;IAAAqB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAArCG,QAAQ,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAC5BnB,SAAS,CAAC,YAAM;IAGd,IAAI;MACFgB,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;MAEnBR,SAAS,CAACc,OAAO,GAAGpB,cAAc,CAAC,uBAAuB,CAAC;MAC3Da,OAAO,CAACC,GAAG,CAAC,WAAW,GAACR,SAAS,CAACc,OAAO,CAAC;IAC5C,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdR,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAC;IACpD;IAEA,IAAI;MACF,IAAIR,SAAS,CAACc,OAAO,EAAE;QACrBd,SAAS,CAACc,OAAO,CAACE,IAAI,CAAC,WAAW,EAAEV,MAAM,CAAC;QAC3CC,OAAO,CAACC,GAAG,CAAC,WAAW,GAACF,MAAM,CAAC;QAC/BC,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;MAC3B,CAAC,MAAM;QACLD,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;MACvC;IACF,CAAC,CAAC,OAAOO,KAAK,EAAE;MACdR,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;IACvC;IAGA,IAAI;MACF,IAAIR,SAAS,CAACc,OAAO,EAAE;QACrBP,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;QAGzBR,SAAS,CAACc,OAAO,CAACG,EAAE,CAAC,YAAY,EAAE,UAACC,MAAM,EAAK;UAC7CX,OAAO,CAACC,GAAG,CAAC,UAAU,GAACU,MAAM,CAAC;UAC9BC,QAAQ,CAACD,MAAM,CAAC;UAChBjB,SAAS,CAACa,OAAO,GAAGI,MAAM;QAC5B,CAAC,CAAC;MACJ,CAAC,MAAM;QACLX,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;MACvC;IACF,CAAC,CAAC,OAAOO,KAAK,EAAE;MACdR,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;IAChD;IAGA,IAAGR,SAAS,CAACc,OAAO,EAAC;MACrBd,SAAS,CAACc,OAAO,CAACG,EAAE,CAAC,aAAa,EAAE,UAAAC,MAAM,EAAI;QAC5CjB,SAAS,CAACa,OAAO,GAAGI,MAAM;MAC5B,CAAC,CAAC;MAEFlB,SAAS,CAACc,OAAO,CAACG,EAAE,CAAC,OAAO,EAAEG,WAAW,CAAC;MAC1Cb,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC;MAEjBR,SAAS,CAACc,OAAO,CAACG,EAAE,CAAC,QAAQ,EAAEI,YAAY,CAAC;MAE5CrB,SAAS,CAACc,OAAO,CAACG,EAAE,CAAC,eAAe,EAAEK,wBAAwB,CAAC;IAAC;EAwClE,CAAC,EAAE,EAAE,CAAC;EAEN,SAASH,QAAQA,CAACD,MAAW,EAAE;IAE7BX,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;IACtC,IAAI;MACFD,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;MAChCD,OAAO,CAACC,GAAG,CAAC,SAAS,GAACU,MAAM,CAAC;MAC7BnB,OAAO,CAACe,OAAO,GAAGS,IAAI,CAACL,MAAM,CAAC;MAC9BX,OAAO,CAACC,GAAG,CAAC,SAAS,GAACT,OAAO,CAACe,OAAO,CAAC;MACtCZ,WAAW,CAACY,OAAO,GAAGf,OAAO,CAACe,OAAO,CAACU,iBAAiB,CAAC,aAAa,CAAC;MACtE,IAAItB,WAAW,CAACY,OAAO,EAErBZ,WAAW,CAACY,OAAO,CAACW,SAAS,GAAGC,oBAAoB;IAE1D,CAAC,CAAC,OAAOX,KAAK,EAAE;MACdR,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;IAClC;EACF;EAEA,SAASe,IAAIA,CAACL,MAAc,EAAE;IAC5BX,OAAO,CAACC,GAAG,CAAC,KAAK,CAAC;IAClB,IAAMmB,IAAI,GAAG,IAAIC,iBAAiB,CAAC;MACjCC,UAAU,EAAE,CACV;QAEEC,IAAI,EAAE;MACR,CAAC,EACD;QACEA,IAAI,EAAE,uBAAuB;QACzBC,UAAU,EAAE,QAAQ;QACpBC,QAAQ,EAAE;MAIhB,CAAC;IAEL,CAAC,CAAC;IACFzB,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;IACnBmB,IAAI,CAACM,cAAc,GAAGC,uBAAuB;IAC7CP,IAAI,CAACQ,mBAAmB,GAAG;MAAA,OAAMC,4BAA4B,CAAClB,MAAM,CAAC;IAAA;IACrE,OAAOS,IAAI;EACb;EAEA,SAASS,4BAA4BA,CAAClB,MAAc,EAAE;IAEpDnB,OAAO,CAACe,OAAO,CACZuB,WAAW,CAAC,CAAC,CACbC,IAAI,CAAC,UAACC,KAAgC,EAAK;MAC1C,OAAOxC,OAAO,CAACe,OAAO,CAAC0B,mBAAmB,CAACD,KAAK,CAAC;IACnD,CAAC,CAAC,CACDD,IAAI,CAAC,YAAM;MAAA,IAAAG,kBAAA,EAAAC,mBAAA;MACV,IAAMC,OAAO,GAAG;QACdC,MAAM,EAAE1B,MAAM;QACd2B,MAAM,GAAAJ,kBAAA,GAAEzC,SAAS,CAACc,OAAO,qBAAjB2B,kBAAA,CAAmBK,EAAE;QAC7BC,GAAG,EAAEhD,OAAO,CAACe,OAAO,CAACkC;MACvB,CAAC;MACD,CAAAN,mBAAA,GAAA1C,SAAS,CAACc,OAAO,qBAAjB4B,mBAAA,CAAmB1B,IAAI,CAAC,OAAO,EAAE2B,OAAO,CAAC;IAC3C,CAAC,CAAC,CACDM,KAAK,CAAC,UAACC,GAAU;MAAA,OAChB3C,OAAO,CAACC,GAAG,CAAC,yCAAyC,EAAE0C,GAAG,CAAC;IAAA,CAC7D,CAAC;EACL;EAEA,SAAS9B,WAAWA,CAAC+B,QAAa,EAAE;IAIlC5C,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;IACpCT,OAAO,CAACe,OAAO,GAAGS,IAAI,CAAC4B,QAAQ,CAACN,MAAM,CAAC;IACvC9C,OAAO,CAACe,OAAO,CAACsC,aAAa,GAAG,UAACC,KAAU,EAAK;MAC9CnD,WAAW,CAACY,OAAO,GAAGuC,KAAK,CAACC,OAAO;MACnC,IAAIpD,WAAW,CAACY,OAAO,EAAE;QACvBZ,WAAW,CAACY,OAAO,CAACW,SAAS,GAAGC,oBAAoB;MACtD;MAEAnB,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;IACjD,CAAC;IAMD,IAAM+C,IAAI,GAAG,IAAIC,qBAAqB,CAACL,QAAQ,CAACJ,GAAG,CAAC;IAKpDhD,OAAO,CAACe,OAAO,CACZ2C,oBAAoB,CAACF,IAAI,CAAC,CAC1BjB,IAAI,CAAC,YAAM,CAAC,CAAC,CAAC,CACdA,IAAI,CAAC,YAAM;MACV,OAAOvC,OAAO,CAACe,OAAO,CAAC4C,YAAY,CAAC,CAAC;IACvC,CAAC,CAAC,CACDpB,IAAI,CAAC,UAACqB,MAAW,EAAK;MAErB,OAAO5D,OAAO,CAACe,OAAO,CAAC0B,mBAAmB,CAACmB,MAAM,CAAC;IACpD,CAAC,CAAC,CACDrB,IAAI,CAAC,YAAM;MAAA,IAAAsB,mBAAA;MACV,IAAMjB,OAAO,GAAG;QACdC,MAAM,EAAEO,QAAQ,CAACN,MAAM;QACvBA,MAAM,GAAAe,mBAAA,GAAE5D,SAAS,CAACc,OAAO,qBAAjB8C,mBAAA,CAAmBd,EAAE;QAC7BC,GAAG,EAAEhD,OAAO,CAACe,OAAO,CAACkC;MACvB,CAAC;MACD,IAAIhD,SAAS,CAACc,OAAO,EAAE;QAAA,IAAA+C,mBAAA;QACrB,CAAAA,mBAAA,GAAA7D,SAAS,CAACc,OAAO,qBAAjB+C,mBAAA,CAAmB7C,IAAI,CAAC,QAAQ,EAAE2B,OAAO,CAAC;MAC5C;IACF,CAAC,CAAC;EACN;EAEA,SAAStB,YAAYA,CAACyC,OAAY,EAAE;IAElC,IAAIA,OAAO,IAAI/D,OAAO,CAACe,OAAO,EAAE;MAC9B,IAAMyC,IAAI,GAAG,IAAIC,qBAAqB,CAACM,OAAO,CAACf,GAAG,CAAC;MACnDhD,OAAO,CAACe,OAAO,CACZ2C,oBAAoB,CAACF,IAAI,CAAC,CAC1BN,KAAK,CAAC,UAACc,CAAM;QAAA,OAAKxD,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEuD,CAAC,CAAC;MAAA,EAAC;IAC7D,CAAC,MAAM;MACLxD,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;IACzC;EACF;EAEA,SAASkB,oBAAoBA,CAACqC,CAAgB,EAAE;IAG9CxD,OAAO,CAACC,GAAG,CAAC,mCAAmC,EAAEuD,CAAC,CAACC,IAAI,CAAC;IACxD,IAAMC,GAAG,GAAG,CACV;MACEC,GAAG,EAAEC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,CAACC,QAAQ,CAAC,CAAC;MAChDC,IAAI,EAAER,CAAC,CAACC,IAAI;MACZQ,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC;MACrBC,IAAI,EAAE;QACJR,GAAG,EAAE;MACP;IACF,CAAC,CACF;IACDrD,WAAW,CACT,UAAC8D,gBAAgB;MAAA,OACfnF,UAAU,CAACoF,MAAM,CAACD,gBAAgB,EAAEV,GAAG,CAAC;IAAA,CAC5C,CAAC;EACH;EAEA,SAAS/B,uBAAuBA,CAAC6B,CAAM,EAAE;IAOvC,IAAIA,CAAC,CAACc,SAAS,EAAE;MAAA,IAAAC,mBAAA;MACf,IAAMnC,OAAO,GAAG;QACdC,MAAM,EAAE3C,SAAS,CAACa,OAAO;QACzB+D,SAAS,EAAEd,CAAC,CAACc;MACf,CAAC;MACD,CAAAC,mBAAA,GAAA9E,SAAS,CAACc,OAAO,qBAAjBgE,mBAAA,CAAmB9D,IAAI,CAAC,eAAe,EAAE2B,OAAO,CAAC;IACnD;EACF;EAEA,SAASrB,wBAAwBA,CAAC6B,QAAa,EAAE;IAC/C5C,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;IACtC,IAAMqE,SAAS,GAAG,IAAIE,eAAe,CAAC5B,QAAQ,CAAC;IAC/C5C,OAAO,CAACC,GAAG,CAAC,iBAAiB,GAAGqE,SAAS,CAAC;IAC1C9E,OAAO,CAACe,OAAO,CACZkE,eAAe,CAACH,SAAS,CAAC,CAC1B5B,KAAK,CAAC,UAACc,CAAM;MAAA,OAAKxD,OAAO,CAACC,GAAG,CAAC,QAAQ,GAACuD,CAAC,CAAC;IAAA,EAAC;EAC/C;EAEA,SAASkB,WAAWA,CAAA,EAAgB;IAAA,IAAfrE,QAAQ,GAAAsE,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;IAChC,IAAItE,QAAQ,CAACuE,MAAM,GAAG,CAAC,EAAE;MAAA,IAAAE,oBAAA;MACvB9E,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;MAC/B,IAAQ+D,IAAI,GAAK3D,QAAQ,CAAC,CAAC,CAAC,CAApB2D,IAAI;MACZhE,OAAO,CAACC,GAAG,CAAC,OAAO,GAAC+D,IAAI,CAAC;MACzB,CAAAc,oBAAA,GAAAnF,WAAW,CAACY,OAAO,qBAAnBuE,oBAAA,CAAqBC,IAAI,CAACf,IAAI,CAAC;MAC/B1D,WAAW,CACT,UAAC8D,gBAAgB;QAAA,OACfnF,UAAU,CAACoF,MAAM,CAACD,gBAAgB,EAAE/D,QAAQ,CAAC;MAAA,CACjD,CAAC;IACH;EACF;EAEA,OACEf,IAAA,CAACL,UAAU;IACToB,QAAQ,EAAEA,QAAS;IACnB2E,MAAM,EAAE,SAAAA,OAAC3E,QAAQ;MAAA,OAAKqE,WAAW,CAACrE,QAAiB,CAAC;IAAA,CAAC;IACrD8D,IAAI,EAAE;MACJR,GAAG,EAAE;IACP;EAAE,CACH,CAAC;AAEN,CAAC;AAED,IAAMsB,MAAM,GAAG/F,UAAU,CAACgG,MAAM,CAAC;EAC/BC,SAAS,EAAE;IACTC,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBC,YAAY,EAAE;EAChB,CAAC;EAEDC,UAAU,EAAE;IACVC,UAAU,EAAE,YAAY;IACxBC,QAAQ,EAAE,EAAE;IACZC,SAAS,EAAE,QAAQ;IACnBC,SAAS,EAAE;EACb;AACF,CAAC,CAAC;AACF,eAAerG,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}