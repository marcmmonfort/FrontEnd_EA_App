{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useNavigation, useRoute } from \"@react-navigation/native\";\nimport React, { useState } from \"react\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport MainContainer from \"../../components/containers/Main\";\nimport DateTimePicker from \"@react-native-community/datetimepicker\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Picker } from \"@react-native-picker/picker\";\nimport StyledTextInputs from \"../../components/inputs/StyledTextInputs\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function ScreenRegisterD() {\n  var route = useRoute();\n  var _ref = route.params || {},\n    appUser = _ref.appUser,\n    nameUser = _ref.nameUser,\n    surnameUser = _ref.surnameUser,\n    mailUser = _ref.mailUser,\n    passwordUser = _ref.passwordUser,\n    photoUser = _ref.photoUser;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    birthdateUser = _useState2[0],\n    setbirthdateUser = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    genderUser = _useState4[0],\n    setgenderUser = _useState4[1];\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    ocupationUser = _useState6[0],\n    setocupationUser = _useState6[1];\n  var _useState7 = useState(new Date()),\n    _useState8 = _slicedToArray(_useState7, 2),\n    selectedDate = _useState8[0],\n    setSelectedDate = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    showDatePicker = _useState10[0],\n    setShowDatePicker = _useState10[1];\n  var handleShowDatePicker = function handleShowDatePicker() {\n    setShowDatePicker(true);\n  };\n  var handleDateChange = function handleDateChange(event, selectedDate) {\n    setShowDatePicker(false);\n    if (selectedDate) {\n      setSelectedDate(selectedDate);\n      setbirthdateUser(selectedDate.toISOString());\n    }\n  };\n  var formatDate = function formatDate(date) {\n    var day = date.getDate();\n    var month = date.getMonth() + 1;\n    var year = date.getFullYear();\n    return (day < 10 ? \"0\" + day : day) + \"/\" + (month < 10 ? \"0\" + month : month) + \"/\" + year;\n  };\n  var navigation = useNavigation();\n  var handleGoToScreenRegisterE = function handleGoToScreenRegisterE() {\n    if (!birthdateUser || !genderUser) {\n      Alert.alert(\"Hello\", \"You must complete all the fields\");\n    } else {\n      navigation.navigate(\"ScreenRegisterE\", {\n        appUser: appUser,\n        nameUser: nameUser,\n        surnameUser: surnameUser,\n        mailUser: mailUser,\n        passwordUser: passwordUser,\n        photoUser: photoUser,\n        birthdateUser: birthdateUser,\n        genderUser: genderUser,\n        ocupationUser: ocupationUser\n      });\n    }\n  };\n  var handleGoBack = function handleGoBack() {\n    navigation.goBack();\n  };\n  var styles = StyleSheet.create({\n    text: {\n      color: \"white\"\n    },\n    picker: {\n      color: \"black\",\n      backgroundColor: \"yellow\",\n      borderWidth: 1,\n      borderColor: \"white\",\n      borderRadius: 5,\n      marginTop: 10,\n      marginBottom: 10\n    }\n  });\n  return _jsxs(MainContainer, {\n    children: [_jsxs(View, {\n      children: [_jsx(Button, {\n        title: \"Select Birthdate\",\n        onPress: handleShowDatePicker\n      }), _jsxs(Text, {\n        style: styles.text,\n        children: [\"Selected Birthdate: \", selectedDate.toDateString()]\n      }), _jsxs(Text, {\n        style: styles.text,\n        children: [\"Selected Birthdate: \", formatDate(selectedDate)]\n      }), showDatePicker && _jsx(DateTimePicker, {\n        value: selectedDate,\n        mode: \"date\",\n        display: \"default\",\n        onChange: handleDateChange\n      }), _jsxs(Picker, {\n        selectedValue: genderUser,\n        style: styles.picker,\n        onValueChange: function onValueChange(itemValue) {\n          return setgenderUser(itemValue);\n        },\n        children: [_jsx(Picker.Item, {\n          label: \"Male\",\n          value: \"male\"\n        }), _jsx(Picker.Item, {\n          label: \"Female\",\n          value: \"female\"\n        })]\n      }), _jsx(StyledTextInputs, {\n        placeholder: \"Ocupation\",\n        value: ocupationUser,\n        onChangeText: function onChangeText(value) {\n          return setocupationUser(value);\n        }\n      })]\n    }), _jsx(Text, {\n      style: styles.text,\n      children: birthdateUser\n    }), _jsx(Text, {\n      style: styles.text,\n      children: genderUser\n    }), _jsx(Text, {\n      style: styles.text,\n      children: ocupationUser\n    }), _jsx(Button, {\n      title: \"Next\",\n      onPress: handleGoToScreenRegisterE\n    }), _jsx(Button, {\n      title: \"Back\",\n      onPress: handleGoBack\n    })]\n  });\n}","map":{"version":3,"names":["useNavigation","useRoute","React","useState","Alert","View","Text","Button","MainContainer","DateTimePicker","StyleSheet","Picker","StyledTextInputs","jsx","_jsx","jsxs","_jsxs","ScreenRegisterD","route","_ref","params","appUser","nameUser","surnameUser","mailUser","passwordUser","photoUser","_useState","_useState2","_slicedToArray","birthdateUser","setbirthdateUser","_useState3","_useState4","genderUser","setgenderUser","_useState5","_useState6","ocupationUser","setocupationUser","_useState7","Date","_useState8","selectedDate","setSelectedDate","_useState9","_useState10","showDatePicker","setShowDatePicker","handleShowDatePicker","handleDateChange","event","toISOString","formatDate","date","day","getDate","month","getMonth","year","getFullYear","navigation","handleGoToScreenRegisterE","alert","navigate","handleGoBack","goBack","styles","create","text","color","picker","backgroundColor","borderWidth","borderColor","borderRadius","marginTop","marginBottom","children","title","onPress","style","toDateString","value","mode","display","onChange","selectedValue","onValueChange","itemValue","Item","label","placeholder","onChangeText"],"sources":["C:/Users/eloim/OneDrive/Uni/4B/EA/ProyectoEA/Frontend_/FrontEnd_EA_App/src/infrastructure/UI/screens/Register/register4.screen.tsx"],"sourcesContent":["import { useNavigation, useRoute } from \"@react-navigation/native\";\r\nimport React, { useState } from \"react\";\r\nimport { Alert, View, Text, Button } from \"react-native\";\r\nimport MainContainer from \"../../components/containers/Main\";\r\nimport DateTimePicker from \"@react-native-community/datetimepicker\";\r\nimport { StyleSheet } from \"react-native\";\r\nimport { Picker } from \"@react-native-picker/picker\";\r\nimport StyledTextInputs from \"../../components/inputs/StyledTextInputs\";\r\n\r\ninterface RouteParams {\r\n  appUser?: any;\r\n  nameUser?: string;\r\n  surnameUser?: string;\r\n  mailUser?: string;\r\n  passwordUser?: string;\r\n  photoUser?: string;\r\n}\r\n\r\nexport default function ScreenRegisterD() {\r\n  const route = useRoute();\r\n  const {\r\n    appUser,\r\n    nameUser,\r\n    surnameUser,\r\n    mailUser,\r\n    passwordUser,\r\n    photoUser,\r\n  }: RouteParams = route.params || {};\r\n  const [birthdateUser, setbirthdateUser] = useState(\"\");\r\n  const [genderUser, setgenderUser] = useState(\"\");\r\n  const [ocupationUser, setocupationUser] = useState(\"\");\r\n\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const [showDatePicker, setShowDatePicker] = useState(false);\r\n\r\n  const handleShowDatePicker = () => {\r\n    setShowDatePicker(true);\r\n  };\r\n\r\n  const handleDateChange = (event: any, selectedDate: any) => {\r\n    setShowDatePicker(false);\r\n    if (selectedDate) {\r\n      setSelectedDate(selectedDate);\r\n      setbirthdateUser(selectedDate.toISOString());\r\n    }\r\n  };\r\n\r\n  const formatDate = (date: {\r\n    getDate: () => any;\r\n    getMonth: () => number;\r\n    getFullYear: () => any;\r\n  }) => {\r\n    const day = date.getDate();\r\n    const month = date.getMonth() + 1;\r\n    const year = date.getFullYear();\r\n    return `${day < 10 ? \"0\" + day : day}/${\r\n      month < 10 ? \"0\" + month : month\r\n    }/${year}`;\r\n  };\r\n\r\n  const navigation = useNavigation();\r\n\r\n  const handleGoToScreenRegisterE = () => {\r\n    if (!birthdateUser || !genderUser) {\r\n      Alert.alert(\"Hello\", \"You must complete all the fields\");\r\n    } else {\r\n      navigation.navigate(\"ScreenRegisterE\"as never, {\r\n        appUser,\r\n        nameUser,\r\n        surnameUser,\r\n        mailUser,\r\n        passwordUser,\r\n        photoUser,\r\n        birthdateUser,\r\n        genderUser,\r\n        ocupationUser,\r\n      }as never);\r\n    }\r\n  };\r\n\r\n  const handleGoBack = () => {\r\n    navigation.goBack();\r\n  };\r\n\r\n  const styles = StyleSheet.create({\r\n    text: {\r\n      color: \"white\",\r\n    },\r\n    picker: {\r\n      color: \"black\",\r\n      backgroundColor: \"yellow\",\r\n      borderWidth: 1,\r\n      borderColor: \"white\",\r\n      borderRadius: 5,\r\n      marginTop: 10,\r\n      marginBottom: 10,\r\n    },\r\n  });\r\n\r\n  return (\r\n    <MainContainer>\r\n      <View>\r\n        <Button title=\"Select Birthdate\" onPress={handleShowDatePicker} />\r\n        <Text style={styles.text}>\r\n          Selected Birthdate: {selectedDate.toDateString()}\r\n        </Text>\r\n        <Text style={styles.text}>\r\n          Selected Birthdate: {formatDate(selectedDate)}\r\n        </Text>\r\n        {showDatePicker && (\r\n          <DateTimePicker\r\n            value={selectedDate}\r\n            mode=\"date\"\r\n            display=\"default\"\r\n            onChange={handleDateChange}\r\n          />\r\n        )}\r\n        <Picker\r\n          selectedValue={genderUser}\r\n          style={styles.picker}\r\n          onValueChange={(itemValue) => setgenderUser(itemValue)}\r\n        >\r\n          <Picker.Item label=\"Male\" value=\"male\" />\r\n          <Picker.Item label=\"Female\" value=\"female\" />\r\n        </Picker>\r\n        <StyledTextInputs\r\n          placeholder=\"Ocupation\"\r\n          value={ocupationUser}\r\n          onChangeText={(value: React.SetStateAction<string>) =>\r\n            setocupationUser(value)\r\n          }\r\n        />\r\n      </View>\r\n      <Text style={styles.text}>{birthdateUser}</Text>\r\n      <Text style={styles.text}>{genderUser}</Text>\r\n      <Text style={styles.text}>{ocupationUser}</Text>\r\n\r\n      <Button title=\"Next\" onPress={handleGoToScreenRegisterE} />\r\n      <Button title=\"Back\" onPress={handleGoBack} />\r\n    </MainContainer>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}