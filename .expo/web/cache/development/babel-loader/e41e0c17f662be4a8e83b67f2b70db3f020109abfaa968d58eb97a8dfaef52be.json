{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport React, { useState } from \"react\";\nimport MainContainer from \"../components/containers/Main\";\nimport Title from \"../components/texts/Title\";\nimport SubTitle from \"../components/texts/Subtitle\";\nimport StyledTextInputs from \"../components/inputs/StyledTextInputs\";\nimport ButtonGradient from \"../components/buttons/ButtonGradient\";\nimport { SessionService } from \"../../services/user/session.service\";\nimport NormalText from \"../components/texts/NormalText\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Register from \"../components/texts/Register\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function LoginScreen() {\n  var navigation = useNavigation();\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    inputEmail = _useState2[0],\n    setInputEmail = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    inputPassword = _useState4[0],\n    setInputPassword = _useState4[1];\n  return _jsxs(MainContainer, {\n    children: [_jsx(Title, {\n      children: \"Lplan\"\n    }), _jsx(SubTitle, {\n      children: \"Let's Go!\"\n    }), _jsx(StyledTextInputs, {\n      placeholder: \"mail\",\n      value: inputEmail,\n      onChangeText: setInputEmail\n    }), _jsx(StyledTextInputs, {\n      placeholder: \"Password\",\n      value: inputPassword,\n      onChangeText: setInputPassword,\n      secureTextEntry: true\n    }), _jsx(ButtonGradient, {\n      onPress: function onPress() {\n        var formData = {\n          mailUser: inputEmail,\n          passwordUser: inputPassword\n        };\n        console.log(\"formData \" + formData.mailUser);\n        console.log(\"formData \" + formData.passwordUser);\n        SessionService.login(formData).then(function (response) {\n          console.log(response);\n          if (response.status === 200) {\n            console.log(response.data);\n            SessionService.setCurrentUser(JSON.stringify(response.data.user.uuid), JSON.stringify(response.data.token));\n            console.log(\"_id\" + JSON.stringify(response.data.user.uuid));\n            console.log(\"token\" + JSON.stringify(response.data.token));\n            console.log(\"Login Succesfull!\");\n            navigation.navigate('HomeScreen');\n          }\n        }).catch(function (error) {\n          console.error(\"error: \" + error);\n          console.log(\"error.response: \" + error.response);\n          switch (error.response.status) {\n            case 403:\n              console.log(\"Incorrect Password\");\n              break;\n            case 404:\n              console.log(\"User does not exist\");\n              navigation.navigate(\"Register\");\n              break;\n          }\n        });\n      }\n    }), _jsx(NormalText, {\n      children: \"Aren't you still an @lplan member?\"\n    }), _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.navigate(\"Register\");\n      },\n      children: _jsx(Register, {\n        children: \"Sign Up!\"\n      })\n    }), _jsx(StatusBar, {})]\n  });\n}","map":{"version":3,"names":["useNavigation","React","useState","MainContainer","Title","SubTitle","StyledTextInputs","ButtonGradient","SessionService","NormalText","StatusBar","TouchableOpacity","Register","jsx","_jsx","jsxs","_jsxs","LoginScreen","navigation","_useState","_useState2","_slicedToArray","inputEmail","setInputEmail","_useState3","_useState4","inputPassword","setInputPassword","children","placeholder","value","onChangeText","secureTextEntry","onPress","formData","mailUser","passwordUser","console","log","login","then","response","status","data","setCurrentUser","JSON","stringify","user","uuid","token","navigate","catch","error"],"sources":["C:/Users/oscar/Desktop/proyecto/2005/FrontEnd_EA_app/my-project/src/infrastructure/UI/screens/login.screen.tsx"],"sourcesContent":["import { useNavigation } from \"@react-navigation/native\";\r\nimport React, { useState } from \"react\";\r\nimport Svg, { Defs, Path, Pattern, Use, Image } from \"react-native-svg\";\r\nimport MainContainer from \"../components/containers/Main\";\r\nimport Title from \"../components/texts/Title\";\r\nimport SubTitle from \"../components/texts/Subtitle\";\r\nimport StyledTextInputs from \"../components/inputs/StyledTextInputs\";\r\nimport ButtonGradient from \"../components/buttons/ButtonGradient\";\r\nimport { AuthEntity } from \"../../../domain/user/user.entity\";\r\nimport { SessionService } from \"../../services/user/session.service\";\r\nimport NormalText from \"../components/texts/NormalText\";\r\nimport { StatusBar, TouchableOpacity } from \"react-native\";\r\nimport Register from \"../components/texts/Register\";\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nexport default function LoginScreen() {\r\n  const navigation = useNavigation();\r\n\r\n  const [inputEmail, setInputEmail] = useState(\"\");\r\n  const [inputPassword, setInputPassword] = useState(\"\");\r\n\r\n  return (\r\n    <MainContainer>\r\n      <Title>Lplan</Title>\r\n      <SubTitle>Let's Go!</SubTitle>\r\n      <StyledTextInputs\r\n        placeholder=\"mail\"\r\n        value={inputEmail}\r\n        onChangeText={setInputEmail}\r\n      />\r\n      <StyledTextInputs\r\n        placeholder=\"Password\"\r\n        value={inputPassword}\r\n        onChangeText={setInputPassword}\r\n        secureTextEntry={true}\r\n      />\r\n      <ButtonGradient\r\n        onPress={() => {\r\n          const formData: AuthEntity = {\r\n            mailUser: inputEmail,\r\n            passwordUser: inputPassword,\r\n          };\r\n\r\n          console.log(\"formData \" + formData.mailUser);\r\n          console.log(\"formData \" + formData.passwordUser);\r\n          SessionService.login(formData)\r\n            .then((response) => {\r\n              console.log(response);\r\n              if (response.status === 200) {\r\n                console.log(response.data);\r\n                SessionService.setCurrentUser(\r\n                  JSON.stringify(response.data.user.uuid),\r\n                  JSON.stringify(response.data.token)\r\n                );\r\n                console.log(\"_id\" + JSON.stringify(response.data.user.uuid));\r\n                console.log(\"token\" + JSON.stringify(response.data.token));\r\n                console.log(\"Login Succesfull!\");\r\n\r\n                navigation.navigate('HomeScreen' as never);\r\n              }\r\n            })\r\n            .catch((error) => {\r\n              console.error(\"error: \" + error);\r\n              console.log(\"error.response: \" + error.response);\r\n              switch (error.response.status) {\r\n                case 403:\r\n                  // Poner aquí el alert ...\r\n                  console.log(\"Incorrect Password\");\r\n\r\n                  break;\r\n                case 404:\r\n                  // Poner aquí el alert ...\r\n                  console.log(\"User does not exist\");\r\n                  navigation.navigate(\"Register\" as never);\r\n                  break;\r\n              }\r\n            });\r\n        }}\r\n      />\r\n      <NormalText>Aren't you still an @lplan member?</NormalText>\r\n      <TouchableOpacity\r\n        onPress={() => navigation.navigate(\"Register\" as never)}\r\n      >\r\n        <Register>Sign Up!</Register>\r\n      </TouchableOpacity>\r\n      <StatusBar />\r\n    </MainContainer>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}