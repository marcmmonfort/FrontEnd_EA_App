{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { SessionService } from \"../../services/user/session.service\";\nimport { useFocusEffect } from \"@react-navigation/native\";\nimport { CRUDService } from \"../../services/user/CRUD.service\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport SearchBar from \"../components/searchbar/searchbar\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function DiscoveryScreen() {\n  var navigation = useNavigation();\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentUser = _useState2[0],\n    setCurrentUser = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    searchQuery = _useState4[0],\n    setSearchQuery = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    userList = _useState6[0],\n    setUserList = _useState6[1];\n  useFocusEffect(React.useCallback(function () {\n    var getUser = function () {\n      var _ref = _asyncToGenerator(function* () {\n        var userId = yield SessionService.getCurrentUser();\n        console.log(\"ID of the Logged User:\" + userId);\n        if (userId) {\n          try {\n            yield CRUDService.getUser(userId).then(function (response) {\n              console.log(\"Punto 1: \" + response);\n              console.log(response == null ? void 0 : response.data);\n              setCurrentUser(response == null ? void 0 : response.data);\n            });\n          } catch (error) {\n            console.log(\"Error: \" + error);\n          }\n        }\n      });\n      return function getUser() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    getUser();\n  }, []));\n  var handleSearch = function () {\n    var _ref2 = _asyncToGenerator(function* (query, setUserList) {\n      console.log('He entrado en handleSearch.');\n      if (query.length > 0) {\n        try {\n          var response = yield CRUDService.searchUsers(query);\n          console.log(response);\n          setUserList(response == null ? void 0 : response.data);\n          console.log('He hecho el servicio de handleSearch.');\n          console.log('>> Lista de usuarios: ' + userList);\n        } catch (error) {\n          console.error(error);\n        }\n      } else {\n        try {\n          var _response = yield CRUDService.getUsers();\n          setUserList(_response == null ? void 0 : _response.data);\n        } catch (error) {\n          console.error(error);\n        }\n      }\n    });\n    return function handleSearch(_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var handleSearchWrapper = function handleSearchWrapper(searchText) {\n    handleSearch(searchText, setUserList);\n  };\n  var handleGoToScreenUser = function handleGoToScreenUser(uuid) {\n    navigation.navigate(\"UserScreen\", {\n      uuid: uuid\n    });\n  };\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      children: \"Discovery\"\n    }), _jsx(SearchBar, {\n      onSearch: handleSearchWrapper\n    }), _jsx(View, {\n      children: userList && userList.length > 0 ? _jsx(FlatList, {\n        data: userList,\n        renderItem: function renderItem(_ref3) {\n          var item = _ref3.item;\n          return _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return handleGoToScreenUser(item.uuid);\n            },\n            children: _jsxs(View, {\n              children: [_jsxs(Text, {\n                children: [item.nameUser, \" \", item.surnameUser]\n              }), _jsxs(Text, {\n                children: [\"@\", item.appUser]\n              })]\n            })\n          });\n        },\n        keyExtractor: function keyExtractor(item) {\n          return item.uuid.toString();\n        }\n      }) : _jsx(Text, {\n        children: \"User Not Found\"\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#ffffff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  text: {\n    fontSize: 24,\n    fontWeight: \"bold\",\n    color: \"#000\"\n  },\n  cardsUsers: {},\n  userLink: {},\n  user: {},\n  userProfileImg: {},\n  profileImgCard: {},\n  userInfo: {},\n  userName: {},\n  userUsername: {},\n  usersNotFound: {}\n});","map":{"version":3,"names":["SessionService","useFocusEffect","CRUDService","React","useState","StyleSheet","Text","View","TouchableOpacity","FlatList","useNavigation","SearchBar","jsx","_jsx","jsxs","_jsxs","DiscoveryScreen","navigation","_useState","_useState2","_slicedToArray","currentUser","setCurrentUser","_useState3","_useState4","searchQuery","setSearchQuery","_useState5","_useState6","userList","setUserList","useCallback","getUser","_ref","_asyncToGenerator","userId","getCurrentUser","console","log","then","response","data","error","apply","arguments","handleSearch","_ref2","query","length","searchUsers","getUsers","_x","_x2","handleSearchWrapper","searchText","handleGoToScreenUser","uuid","navigate","children","onSearch","renderItem","_ref3","item","onPress","nameUser","surnameUser","appUser","keyExtractor","toString","styles","create","container","flex","backgroundColor","alignItems","justifyContent","text","fontSize","fontWeight","color","cardsUsers","userLink","user","userProfileImg","profileImgCard","userInfo","userName","userUsername","usersNotFound"],"sources":["C:/Users/eloim/OneDrive/Uni/4B/EA/ProyectoEA/Frontend_/FrontEnd_EA_App/src/infrastructure/UI/screens/discovery.screen.tsx"],"sourcesContent":["import { SessionService } from \"../../services/user/session.service\";\r\n\r\nimport { useFocusEffect } from \"@react-navigation/native\";\r\nimport { CRUDService } from \"../../services/user/CRUD.service\";\r\nimport React, { useState } from \"react\";\r\nimport { StyleSheet, Text, View, Image, TouchableOpacity, Button, FlatList } from \"react-native\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { UserEntity } from \"../../../domain/user/user.entity\";\r\nimport SearchBar from \"../components/searchbar/searchbar\";\r\n\r\nexport default function DiscoveryScreen() {\r\n\r\n  const navigation = useNavigation();\r\n  const [currentUser, setCurrentUser] = useState<UserEntity | null>(null);\r\n  const [searchQuery, setSearchQuery] = useState<string>('');\r\n  const [userList, setUserList] = useState<UserEntity[] | null>(null);\r\n\r\n  useFocusEffect(\r\n    React.useCallback(() => {\r\n      const getUser = async () => {\r\n        const userId = await SessionService.getCurrentUser();\r\n        console.log(\"ID of the Logged User:\" + userId);\r\n        if (userId) {\r\n          try {\r\n            await CRUDService.getUser(userId)\r\n            .then((response) => {\r\n              console.log(\"Punto 1: \" + response);\r\n              console.log(response?.data);\r\n              setCurrentUser(response?.data);\r\n            })\r\n          } catch (error) {\r\n            console.log(\"Error: \" + error);\r\n          }\r\n        }\r\n      };\r\n      getUser();\r\n    }, [])\r\n  );\r\n\r\n  const handleSearch = async (query: string, setUserList: (users: UserEntity[]) => void) => {\r\n    console.log('He entrado en handleSearch.');\r\n    if (query.length > 0) {\r\n      try {\r\n        const response = await CRUDService.searchUsers(query);\r\n        console.log(response);\r\n        setUserList(response?.data);\r\n        console.log('He hecho el servicio de handleSearch.');\r\n        console.log('>> Lista de usuarios: ' + userList);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    } else {\r\n      try {\r\n        const response = await CRUDService.getUsers();\r\n        setUserList(response?.data);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSearchWrapper = (searchText: string) => {\r\n    handleSearch(searchText, setUserList);\r\n  };\r\n  \r\n  const handleGoToScreenUser = (uuid:string) => {\r\n    navigation.navigate(\"UserScreen\" as never, {uuid} as never);\r\n  };\r\n  \r\n  return (\r\n    <View>\r\n      <Text>Discovery</Text>\r\n\r\n      <SearchBar onSearch={handleSearchWrapper} />\r\n\r\n      <View>\r\n        {userList && userList.length > 0 ? (\r\n          <FlatList\r\n            data={userList}\r\n            renderItem={({ item }) => (\r\n              <TouchableOpacity onPress={() => handleGoToScreenUser(item.uuid)}>\r\n                <View>\r\n                  <Text>{item.nameUser} {item.surnameUser}</Text>\r\n                  <Text>@{item.appUser}</Text>\r\n                </View>\r\n              </TouchableOpacity>\r\n            )}\r\n            keyExtractor={(item) => item.uuid.toString()}\r\n          />\r\n        ) : (\r\n          <Text>User Not Found</Text>\r\n        )}\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#ffffff\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  text: {\r\n    fontSize: 24,\r\n    fontWeight: \"bold\",\r\n    color: \"#000\",\r\n  },\r\n  cardsUsers: {},\r\n  userLink: {},\r\n  user: {},\r\n  userProfileImg: {},\r\n  profileImgCard: {},\r\n  userInfo: {},\r\n  userName: {},\r\n  userUsername: {},\r\n  usersNotFound: {},\r\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}