{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { Agenda } from \"react-native-calendars\";\nimport ActivityDetailsModal from \"../activityDetails/activityModal\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar windowWidth = Dimensions.get(\"window\").width;\nvar CalendarScreen = function CalendarScreen(_ref) {\n  var activities = _ref.activities,\n    uuid = _ref.uuid;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedActivity = _useState2[0],\n    setSelectedActivity = _useState2[1];\n  var _useState3 = useState(activities),\n    _useState4 = _slicedToArray(_useState3, 2),\n    listActivity = _useState4[0],\n    setListActivity = _useState4[1];\n  console.log(\"estamos en la componente:\", listActivity);\n  var handleDayPress = function handleDayPress(date) {\n    var clickedActivity = listActivity.find(function (activity) {\n      return activity.dateActivity.toISOString().split(\"T\")[0] === date.dateString;\n    });\n    if (clickedActivity) {\n      setSelectedActivity(clickedActivity);\n    } else {\n      setSelectedActivity(null);\n    }\n  };\n  var closeActivityDetails = function closeActivityDetails() {\n    setSelectedActivity(null);\n  };\n  var agendaItems = {};\n  activities.forEach(function (activity) {\n    var dateKey = activity.dateActivity.toISOString().split(\"T\")[0];\n    if (!agendaItems[dateKey]) {\n      agendaItems[dateKey] = [];\n    }\n    agendaItems[dateKey].push(activity);\n  });\n  var convertToAgendaEntry = function convertToAgendaEntry(activities) {\n    return activities.map(function (activity) {\n      return {\n        day: activity.dateActivity.toISOString().split(\"T\")[0],\n        name: activity.nameActivity,\n        height: 50\n      };\n    });\n  };\n  var convertedAgendaItems = {};\n  Object.entries(agendaItems).forEach(function (_ref2) {\n    var _ref3 = _slicedToArray(_ref2, 2),\n      date = _ref3[0],\n      activities = _ref3[1];\n    convertedAgendaItems[date] = convertToAgendaEntry(activities);\n  });\n  var renderItem = function renderItem(reservation, isFirst) {\n    return _jsx(View, {\n      style: styles.activityItem,\n      children: _jsx(Text, {\n        children: reservation.name\n      })\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Agenda, {\n      items: convertedAgendaItems,\n      renderItem: renderItem,\n      onDayPress: handleDayPress,\n      style: styles.agenda\n    }), selectedActivity && _jsx(ActivityDetailsModal, {\n      activity: selectedActivity,\n      onClose: closeActivityDetails\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  activityItem: {\n    marginBottom: 10,\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    backgroundColor: \"lightblue\",\n    borderRadius: 5\n  },\n  agenda: {\n    width: windowWidth\n  }\n});\nexport default CalendarScreen;","map":{"version":3,"names":["React","useState","View","StyleSheet","Text","Dimensions","Agenda","ActivityDetailsModal","jsx","_jsx","jsxs","_jsxs","windowWidth","get","width","CalendarScreen","_ref","activities","uuid","_useState","_useState2","_slicedToArray","selectedActivity","setSelectedActivity","_useState3","_useState4","listActivity","setListActivity","console","log","handleDayPress","date","clickedActivity","find","activity","dateActivity","toISOString","split","dateString","closeActivityDetails","agendaItems","forEach","dateKey","push","convertToAgendaEntry","map","day","name","nameActivity","height","convertedAgendaItems","Object","entries","_ref2","_ref3","renderItem","reservation","isFirst","style","styles","activityItem","children","container","items","onDayPress","agenda","onClose","create","flex","backgroundColor","alignItems","justifyContent","marginBottom","paddingHorizontal","paddingVertical","borderRadius"],"sources":["C:/Users/eloim/Uni/ProyectoEA/Frontend_/FrontEnd_EA_App/src/infrastructure/UI/components/calendar/calendar.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { View, StyleSheet, Text, Dimensions } from \"react-native\";\r\nimport { Agenda, AgendaEntry, AgendaSchedule, Calendar } from \"react-native-calendars\";\r\nimport ActivityDetailsModal from \"../activityDetails/activityModal\";\r\nimport { Activity, ActivityEntity } from \"../../../../domain/activity/activity.entity\";\r\n\r\nconst windowWidth = Dimensions.get(\"window\").width;\r\n\r\ninterface CalendarProps {\r\n  activities: Activity[];\r\n  uuid: string; \r\n}\r\n\r\n\r\nconst CalendarScreen = ({activities, uuid}: CalendarProps) => {\r\n  \r\n  \r\n  const [selectedActivity, setSelectedActivity] = useState<Activity | null>(null);\r\n  const [listActivity, setListActivity] = useState<Activity[]>(activities);\r\n  console.log(\"estamos en la componente:\", listActivity)\r\n\r\n  const handleDayPress = (date: { dateString: string }) => {\r\n    const clickedActivity = listActivity.find(\r\n      (activity) => activity.dateActivity.toISOString().split(\"T\")[0] === date.dateString\r\n    );\r\n    if (clickedActivity) {\r\n      setSelectedActivity(clickedActivity);\r\n    } else {\r\n      setSelectedActivity(null);\r\n    }\r\n  };\r\n  \r\n\r\n  const closeActivityDetails = () => {\r\n    setSelectedActivity(null);\r\n  };\r\n\r\n  const agendaItems: { [date: string]: Activity[] } = {};\r\n  activities.forEach((activity) => {\r\n    const dateKey = activity.dateActivity.toISOString().split(\"T\")[0];\r\n    if (!agendaItems[dateKey]) {\r\n      agendaItems[dateKey] = [];\r\n    }\r\n    agendaItems[dateKey].push(activity);\r\n  });\r\n\r\n  const convertToAgendaEntry = (activities: Activity[]): AgendaEntry[] => {\r\n    return activities.map((activity) => ({\r\n      day: activity.dateActivity.toISOString().split(\"T\")[0],\r\n      name: activity.nameActivity,\r\n      height: 50, // Ajusta la altura según tus necesidades\r\n      // Otros campos necesarios en la estructura de AgendaEntry\r\n    }));\r\n  };\r\n\r\n  const convertedAgendaItems: AgendaSchedule = {};\r\n  Object.entries(agendaItems).forEach(([date, activities]) => {\r\n    convertedAgendaItems[date] = convertToAgendaEntry(activities);\r\n  });\r\n\r\n\r\n  const renderItem = (reservation: AgendaEntry, isFirst: boolean) => {\r\n    return (\r\n      <View style={styles.activityItem}>\r\n        {/* Aquí puedes personalizar cómo se muestra cada actividad dentro del calendario */}\r\n        {/* Ejemplo */}\r\n        <Text>{reservation.name}</Text>\r\n      </View>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Agenda\r\n        items={convertedAgendaItems} // Aquí puedes proporcionar los datos de tus actividades en el formato requerido por el componente Agenda\r\n        renderItem={renderItem}\r\n        onDayPress={handleDayPress}\r\n        style={styles.agenda}\r\n        // Aquí puedes personalizar los estilos y configuraciones del calendario\r\n      />\r\n      \r\n      {selectedActivity && (\r\n        <ActivityDetailsModal\r\n          activity={selectedActivity}\r\n          onClose={closeActivityDetails}\r\n        />\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#fff\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  activityItem: {\r\n    marginBottom: 10,\r\n    paddingHorizontal: 20,\r\n    paddingVertical: 10,\r\n    backgroundColor: \"lightblue\",\r\n    borderRadius: 5,\r\n  },\r\n  agenda: {\r\n    width: windowWidth,\r\n  }\r\n});\r\n\r\nexport default CalendarScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}