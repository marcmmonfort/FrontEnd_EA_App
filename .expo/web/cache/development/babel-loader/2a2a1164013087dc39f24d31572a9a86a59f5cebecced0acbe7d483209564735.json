{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport { useNavigation, useRoute } from \"@react-navigation/native\";\nimport * as FileSystem from \"expo-file-system\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function ScreenRegisterC() {\n  var route = useRoute();\n  var _ref = route.params || {},\n    appUser = _ref.appUser,\n    nameUser = _ref.nameUser,\n    surnameUser = _ref.surnameUser,\n    mailUser = _ref.mailUser,\n    passwordUser = _ref.passwordUser;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    photoUser = _useState2[0],\n    setPhotoUser = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    auxPhotoUser = _useState4[0],\n    setAux = _useState4[1];\n  var navigation = useNavigation();\n  var CLOUDINARY_URL = \"https://api.cloudinary.com/v1_1/diuyzbt14/upload\";\n  var handleGoToScreenRegisterD = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      if (!photoUser) {\n        Alert.alert(\"Hello\", \"You must complete all the fields\");\n      } else {\n        navigation.navigate(\"ScreenRegisterD\", {\n          appUser: appUser,\n          nameUser: nameUser,\n          surnameUser: surnameUser,\n          mailUser: mailUser,\n          passwordUser: passwordUser,\n          photoUser: photoUser\n        });\n      }\n    });\n    return function handleGoToScreenRegisterD() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var pickImage = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      var result = yield ImagePicker.launchImageLibraryAsync({\n        allowsEditing: true,\n        aspect: [4, 3],\n        quality: 1,\n        base64: true\n      });\n      if (!result.canceled) {\n        setAux(result.assets[0].uri);\n        setPhotoUser(result.assets[0].uri);\n        var base64Image = yield convertImageToBase64(result.assets[0].uri);\n        setPhotoUser(base64Image);\n        var data = {\n          file: base64Image,\n          upload_preset: \"photoUser\"\n        };\n        fetch(CLOUDINARY_URL, {\n          body: JSON.stringify(data),\n          headers: {\n            \"content-type\": \"application/json\"\n          },\n          method: \"POST\"\n        }).then(function () {\n          var _ref4 = _asyncToGenerator(function* (r) {\n            var data = yield r.json();\n            setPhotoUser(data.url);\n          });\n          return function (_x) {\n            return _ref4.apply(this, arguments);\n          };\n        }()).catch(function (err) {\n          return console.log(err);\n        });\n      }\n    });\n    return function pickImage() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var convertImageToBase64 = function () {\n    var _ref5 = _asyncToGenerator(function* (imageUri) {\n      var base64 = yield FileSystem.readAsStringAsync(imageUri, {\n        encoding: FileSystem.EncodingType.Base64\n      });\n      return \"data:image/jpg;base64,\" + base64;\n    });\n    return function convertImageToBase64(_x2) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  var takeImage = function () {\n    var _ref6 = _asyncToGenerator(function* () {\n      var permissionResult = yield ImagePicker.requestCameraPermissionsAsync();\n      var result = yield ImagePicker.launchCameraAsync({\n        allowsEditing: true,\n        aspect: [4, 3],\n        quality: 1\n      });\n      if (!result.canceled) {\n        setAux(result.assets[0].uri);\n        setPhotoUser(result.assets[0].uri);\n        var base64Image = yield convertImageToBase64(result.assets[0].uri);\n        setPhotoUser(base64Image);\n        var data = {\n          file: base64Image,\n          upload_preset: \"photoUser\"\n        };\n        fetch(CLOUDINARY_URL, {\n          body: JSON.stringify(data),\n          headers: {\n            \"content-type\": \"application/json\"\n          },\n          method: \"POST\"\n        }).then(function () {\n          var _ref7 = _asyncToGenerator(function* (r) {\n            var data = yield r.json();\n            setPhotoUser(data.url);\n          });\n          return function (_x3) {\n            return _ref7.apply(this, arguments);\n          };\n        }()).catch(function (err) {\n          return console.log(err);\n        });\n      }\n    });\n    return function takeImage() {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n  var handleGoBack = function handleGoBack() {\n    navigation.navigate(\"ScreenRegisterB\");\n  };\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    children: [_jsx(Button, {\n      title: \"Pick an image from camera roll\",\n      onPress: pickImage\n    }), _jsx(Button, {\n      title: \"Take a picture\",\n      onPress: takeImage\n    }), auxPhotoUser && _jsx(Image, {\n      source: {\n        uri: auxPhotoUser\n      },\n      style: {\n        width: 200,\n        height: 200,\n        borderRadius: 200 / 2\n      }\n    }), _jsx(Button, {\n      title: \"Next\",\n      onPress: handleGoToScreenRegisterD\n    }), _jsx(Button, {\n      title: \"Back\",\n      onPress: handleGoBack\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","Button","Image","View","Alert","ImagePicker","useNavigation","useRoute","FileSystem","jsx","_jsx","jsxs","_jsxs","ScreenRegisterC","route","_ref","params","appUser","nameUser","surnameUser","mailUser","passwordUser","_useState","_useState2","_slicedToArray","photoUser","setPhotoUser","_useState3","_useState4","auxPhotoUser","setAux","navigation","CLOUDINARY_URL","handleGoToScreenRegisterD","_ref2","_asyncToGenerator","alert","navigate","apply","arguments","pickImage","_ref3","result","launchImageLibraryAsync","allowsEditing","aspect","quality","base64","canceled","assets","uri","base64Image","convertImageToBase64","data","file","upload_preset","fetch","body","JSON","stringify","headers","method","then","_ref4","r","json","url","_x","catch","err","console","log","_ref5","imageUri","readAsStringAsync","encoding","EncodingType","Base64","_x2","takeImage","_ref6","permissionResult","requestCameraPermissionsAsync","launchCameraAsync","_ref7","_x3","handleGoBack","style","flex","alignItems","justifyContent","children","title","onPress","source","width","height","borderRadius"],"sources":["C:/Users/eloim/OneDrive/Uni/4B/EA/ProyectoEA/Frontend_/FrontEnd_EA_App/src/infrastructure/UI/screens/Register/register3.screen.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Button, Image, View, Platform, Alert } from \"react-native\";\r\nimport * as ImagePicker from \"expo-image-picker\";\r\nimport { useNavigation, useRoute } from \"@react-navigation/native\";\r\nimport * as FileSystem from \"expo-file-system\";\r\n\r\ninterface RouteParams {\r\n  appUser?: any;\r\n  nameUser?: string;\r\n  surnameUser?: string;\r\n  mailUser?: string;\r\n  passwordUser?: string;\r\n}\r\nexport default function ScreenRegisterC() {\r\n  const route = useRoute();\r\n  const {\r\n    appUser,\r\n    nameUser,\r\n    surnameUser,\r\n    mailUser,\r\n    passwordUser,\r\n  }: RouteParams = route.params || {};\r\n  const [photoUser, setPhotoUser] = useState(\"\");\r\n  const [auxPhotoUser, setAux] = useState(\"\");\r\n  const navigation = useNavigation();\r\n  let CLOUDINARY_URL = \"https://api.cloudinary.com/v1_1/diuyzbt14/upload\";\r\n  const handleGoToScreenRegisterD = async () => {\r\n    if (!photoUser) {\r\n      Alert.alert(\"Hello\", \"You must complete all the fields\");\r\n    } else {\r\n      navigation.navigate(\r\n        \"ScreenRegisterD\" as never,\r\n        {\r\n          appUser,\r\n          nameUser,\r\n          surnameUser,\r\n          mailUser,\r\n          passwordUser,\r\n          photoUser,\r\n        } as never\r\n      );\r\n    }\r\n  };\r\n\r\n  const pickImage = async () => {\r\n    let result = await ImagePicker.launchImageLibraryAsync({\r\n      //mediaTypes: ImagePicker.MediaTypeOptions.All,\r\n      allowsEditing: true,\r\n      aspect: [4, 3],\r\n      quality: 1,\r\n      base64: true,\r\n    });\r\n\r\n    if (!result.canceled) {\r\n      setAux(result.assets[0].uri);\r\n      setPhotoUser(result.assets[0].uri);\r\n      const base64Image = await convertImageToBase64(result.assets[0].uri);\r\n      setPhotoUser(base64Image);\r\n\r\n      let data = {\r\n        file: base64Image,\r\n        upload_preset: \"photoUser\",\r\n      };\r\n      fetch(CLOUDINARY_URL, {\r\n        body: JSON.stringify(data),\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n        },\r\n        method: \"POST\",\r\n      })\r\n        .then(async (r) => {\r\n          let data = await r.json();\r\n\r\n          //Here I'm using another hook to set State for the photo that we get back //from Cloudinary\r\n\r\n          setPhotoUser(data.url);\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  };\r\n  const convertImageToBase64 = async (imageUri: string) => {\r\n    const base64 = await FileSystem.readAsStringAsync(imageUri, {\r\n      encoding: FileSystem.EncodingType.Base64,\r\n    });\r\n    return `data:image/jpg;base64,${base64}`;\r\n  };\r\n  const takeImage = async () => {\r\n    let permissionResult = await ImagePicker.requestCameraPermissionsAsync();\r\n\r\n    let result = await ImagePicker.launchCameraAsync({\r\n      allowsEditing: true,\r\n      aspect: [4, 3],\r\n      quality: 1,\r\n    });\r\n\r\n    if (!result.canceled) {\r\n      setAux(result.assets[0].uri);\r\n      setPhotoUser(result.assets[0].uri);\r\n      const base64Image = await convertImageToBase64(result.assets[0].uri);\r\n      setPhotoUser(base64Image);\r\n\r\n      let data = {\r\n        file: base64Image,\r\n        upload_preset: \"photoUser\",\r\n      };\r\n      fetch(CLOUDINARY_URL, {\r\n        body: JSON.stringify(data),\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n        },\r\n        method: \"POST\",\r\n      })\r\n        .then(async (r) => {\r\n          let data = await r.json();\r\n\r\n          //Here I'm using another hook to set State for the photo that we get back //from Cloudinary\r\n\r\n          setPhotoUser(data.url);\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  };\r\n  const handleGoBack = () => {\r\n    navigation.navigate(\"ScreenRegisterB\" as never);\r\n  };\r\n\r\n  return (\r\n    <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\" }}>\r\n      <Button title=\"Pick an image from camera roll\" onPress={pickImage} />\r\n      <Button title=\"Take a picture\" onPress={takeImage} />\r\n      {auxPhotoUser && (\r\n        <Image\r\n          source={{ uri: auxPhotoUser }}\r\n          style={{ width: 200, height: 200, borderRadius: 200 / 2 }}\r\n        />\r\n      )}\r\n      <Button title=\"Next\" onPress={handleGoToScreenRegisterD} />\r\n      <Button title=\"Back\" onPress={handleGoBack} />\r\n    </View>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAmB,OAAO;AAAC,OAAAC,MAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,KAAA;AAEnD,OAAO,KAAKC,WAAW,MAAM,mBAAmB;AAChD,SAASC,aAAa,EAAEC,QAAQ,QAAQ,0BAA0B;AAClE,OAAO,KAAKC,UAAU,MAAM,kBAAkB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAS/C,eAAe,SAASC,eAAeA,CAAA,EAAG;EACxC,IAAMC,KAAK,GAAGP,QAAQ,CAAC,CAAC;EACxB,IAAAQ,IAAA,GAMiBD,KAAK,CAACE,MAAM,IAAI,CAAC,CAAC;IALjCC,OAAO,GAAAF,IAAA,CAAPE,OAAO;IACPC,QAAQ,GAAAH,IAAA,CAARG,QAAQ;IACRC,WAAW,GAAAJ,IAAA,CAAXI,WAAW;IACXC,QAAQ,GAAAL,IAAA,CAARK,QAAQ;IACRC,YAAY,GAAAN,IAAA,CAAZM,YAAY;EAEd,IAAAC,SAAA,GAAkCtB,QAAQ,CAAC,EAAE,CAAC;IAAAuB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAvCG,SAAS,GAAAF,UAAA;IAAEG,YAAY,GAAAH,UAAA;EAC9B,IAAAI,UAAA,GAA+B3B,QAAQ,CAAC,EAAE,CAAC;IAAA4B,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAApCE,YAAY,GAAAD,UAAA;IAAEE,MAAM,GAAAF,UAAA;EAC3B,IAAMG,UAAU,GAAGzB,aAAa,CAAC,CAAC;EAClC,IAAI0B,cAAc,GAAG,kDAAkD;EACvE,IAAMC,yBAAyB;IAAA,IAAAC,KAAA,GAAAC,iBAAA,CAAG,aAAY;MAC5C,IAAI,CAACV,SAAS,EAAE;QACdrB,KAAK,CAACgC,KAAK,CAAC,OAAO,EAAE,kCAAkC,CAAC;MAC1D,CAAC,MAAM;QACLL,UAAU,CAACM,QAAQ,CACjB,iBAAiB,EACjB;UACEpB,OAAO,EAAPA,OAAO;UACPC,QAAQ,EAARA,QAAQ;UACRC,WAAW,EAAXA,WAAW;UACXC,QAAQ,EAARA,QAAQ;UACRC,YAAY,EAAZA,YAAY;UACZI,SAAS,EAATA;QACF,CACF,CAAC;MACH;IACF,CAAC;IAAA,gBAhBKQ,yBAAyBA,CAAA;MAAA,OAAAC,KAAA,CAAAI,KAAA,OAAAC,SAAA;IAAA;EAAA,GAgB9B;EAED,IAAMC,SAAS;IAAA,IAAAC,KAAA,GAAAN,iBAAA,CAAG,aAAY;MAC5B,IAAIO,MAAM,SAASrC,WAAW,CAACsC,uBAAuB,CAAC;QAErDC,aAAa,EAAE,IAAI;QACnBC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;QACdC,OAAO,EAAE,CAAC;QACVC,MAAM,EAAE;MACV,CAAC,CAAC;MAEF,IAAI,CAACL,MAAM,CAACM,QAAQ,EAAE;QACpBlB,MAAM,CAACY,MAAM,CAACO,MAAM,CAAC,CAAC,CAAC,CAACC,GAAG,CAAC;QAC5BxB,YAAY,CAACgB,MAAM,CAACO,MAAM,CAAC,CAAC,CAAC,CAACC,GAAG,CAAC;QAClC,IAAMC,WAAW,SAASC,oBAAoB,CAACV,MAAM,CAACO,MAAM,CAAC,CAAC,CAAC,CAACC,GAAG,CAAC;QACpExB,YAAY,CAACyB,WAAW,CAAC;QAEzB,IAAIE,IAAI,GAAG;UACTC,IAAI,EAAEH,WAAW;UACjBI,aAAa,EAAE;QACjB,CAAC;QACDC,KAAK,CAACxB,cAAc,EAAE;UACpByB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,IAAI,CAAC;UAC1BO,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,MAAM,EAAE;QACV,CAAC,CAAC,CACCC,IAAI;UAAA,IAAAC,KAAA,GAAA5B,iBAAA,CAAC,WAAO6B,CAAC,EAAK;YACjB,IAAIX,IAAI,SAASW,CAAC,CAACC,IAAI,CAAC,CAAC;YAIzBvC,YAAY,CAAC2B,IAAI,CAACa,GAAG,CAAC;UACxB,CAAC;UAAA,iBAAAC,EAAA;YAAA,OAAAJ,KAAA,CAAAzB,KAAA,OAAAC,SAAA;UAAA;QAAA,IAAC,CACD6B,KAAK,CAAC,UAACC,GAAG;UAAA,OAAKC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;QAAA,EAAC;MACrC;IACF,CAAC;IAAA,gBAnCK7B,SAASA,CAAA;MAAA,OAAAC,KAAA,CAAAH,KAAA,OAAAC,SAAA;IAAA;EAAA,GAmCd;EACD,IAAMa,oBAAoB;IAAA,IAAAoB,KAAA,GAAArC,iBAAA,CAAG,WAAOsC,QAAgB,EAAK;MACvD,IAAM1B,MAAM,SAASvC,UAAU,CAACkE,iBAAiB,CAACD,QAAQ,EAAE;QAC1DE,QAAQ,EAAEnE,UAAU,CAACoE,YAAY,CAACC;MACpC,CAAC,CAAC;MACF,kCAAgC9B,MAAM;IACxC,CAAC;IAAA,gBALKK,oBAAoBA,CAAA0B,GAAA;MAAA,OAAAN,KAAA,CAAAlC,KAAA,OAAAC,SAAA;IAAA;EAAA,GAKzB;EACD,IAAMwC,SAAS;IAAA,IAAAC,KAAA,GAAA7C,iBAAA,CAAG,aAAY;MAC5B,IAAI8C,gBAAgB,SAAS5E,WAAW,CAAC6E,6BAA6B,CAAC,CAAC;MAExE,IAAIxC,MAAM,SAASrC,WAAW,CAAC8E,iBAAiB,CAAC;QAC/CvC,aAAa,EAAE,IAAI;QACnBC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;QACdC,OAAO,EAAE;MACX,CAAC,CAAC;MAEF,IAAI,CAACJ,MAAM,CAACM,QAAQ,EAAE;QACpBlB,MAAM,CAACY,MAAM,CAACO,MAAM,CAAC,CAAC,CAAC,CAACC,GAAG,CAAC;QAC5BxB,YAAY,CAACgB,MAAM,CAACO,MAAM,CAAC,CAAC,CAAC,CAACC,GAAG,CAAC;QAClC,IAAMC,WAAW,SAASC,oBAAoB,CAACV,MAAM,CAACO,MAAM,CAAC,CAAC,CAAC,CAACC,GAAG,CAAC;QACpExB,YAAY,CAACyB,WAAW,CAAC;QAEzB,IAAIE,IAAI,GAAG;UACTC,IAAI,EAAEH,WAAW;UACjBI,aAAa,EAAE;QACjB,CAAC;QACDC,KAAK,CAACxB,cAAc,EAAE;UACpByB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,IAAI,CAAC;UAC1BO,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,MAAM,EAAE;QACV,CAAC,CAAC,CACCC,IAAI;UAAA,IAAAsB,KAAA,GAAAjD,iBAAA,CAAC,WAAO6B,CAAC,EAAK;YACjB,IAAIX,IAAI,SAASW,CAAC,CAACC,IAAI,CAAC,CAAC;YAIzBvC,YAAY,CAAC2B,IAAI,CAACa,GAAG,CAAC;UACxB,CAAC;UAAA,iBAAAmB,GAAA;YAAA,OAAAD,KAAA,CAAA9C,KAAA,OAAAC,SAAA;UAAA;QAAA,IAAC,CACD6B,KAAK,CAAC,UAACC,GAAG;UAAA,OAAKC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;QAAA,EAAC;MACrC;IACF,CAAC;IAAA,gBAnCKU,SAASA,CAAA;MAAA,OAAAC,KAAA,CAAA1C,KAAA,OAAAC,SAAA;IAAA;EAAA,GAmCd;EACD,IAAM+C,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;IACzBvD,UAAU,CAACM,QAAQ,CAAC,iBAA0B,CAAC;EACjD,CAAC;EAED,OACEzB,KAAA,CAACT,IAAI;IAACoF,KAAK,EAAE;MAAEC,IAAI,EAAE,CAAC;MAAEC,UAAU,EAAE,QAAQ;MAAEC,cAAc,EAAE;IAAS,CAAE;IAAAC,QAAA,GACvEjF,IAAA,CAACT,MAAM;MAAC2F,KAAK,EAAC,gCAAgC;MAACC,OAAO,EAAErD;IAAU,CAAE,CAAC,EACrE9B,IAAA,CAACT,MAAM;MAAC2F,KAAK,EAAC,gBAAgB;MAACC,OAAO,EAAEd;IAAU,CAAE,CAAC,EACpDlD,YAAY,IACXnB,IAAA,CAACR,KAAK;MACJ4F,MAAM,EAAE;QAAE5C,GAAG,EAAErB;MAAa,CAAE;MAC9B0D,KAAK,EAAE;QAAEQ,KAAK,EAAE,GAAG;QAAEC,MAAM,EAAE,GAAG;QAAEC,YAAY,EAAE,GAAG,GAAG;MAAE;IAAE,CAC3D,CACF,EACDvF,IAAA,CAACT,MAAM;MAAC2F,KAAK,EAAC,MAAM;MAACC,OAAO,EAAE5D;IAA0B,CAAE,CAAC,EAC3DvB,IAAA,CAACT,MAAM;MAAC2F,KAAK,EAAC,MAAM;MAACC,OAAO,EAAEP;IAAa,CAAE,CAAC;EAAA,CAC1C,CAAC;AAEX"},"metadata":{},"sourceType":"module","externalDependencies":[]}