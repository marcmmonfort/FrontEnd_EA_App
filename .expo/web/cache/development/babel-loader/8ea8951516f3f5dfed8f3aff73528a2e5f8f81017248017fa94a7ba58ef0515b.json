{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport { useNavigation, useRoute } from \"@react-navigation/native\";\nimport MainContainer from \"../../components/containers/Main\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyledTextInputs from \"../../components/inputs/StyledTextInputs\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function ScreenRegisterB() {\n  var route = useRoute();\n  var _ref = route.params || {},\n    appUser = _ref.appUser,\n    nameUser = _ref.nameUser,\n    surnameUser = _ref.surnameUser;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    mailUser = _useState2[0],\n    setMail = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    passwordUser = _useState4[0],\n    setPasswordUser = _useState4[1];\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    confirmation = _useState6[0],\n    setConfirmation = _useState6[1];\n  var navigation = useNavigation();\n  var handleGoToScreenRegisterC = function handleGoToScreenRegisterC() {\n    if (!mailUser || !passwordUser || !confirmation) {\n      Alert.alert(\"Hello\", \"You must complete all the fields\");\n    } else if (passwordUser !== confirmation) {\n      Alert.alert(\"Password\", \"Passwords does not match\");\n    } else if (!isValidEmail(mailUser)) {\n      Alert.alert(\"Email\", \"Please enter a valid email address\");\n    } else {\n      navigation.navigate(\"ScreenRegisterC\", {\n        appUser: appUser,\n        nameUser: nameUser,\n        surnameUser: surnameUser,\n        mailUser: mailUser,\n        passwordUser: passwordUser\n      });\n    }\n  };\n  var handleGoBack = function handleGoBack() {\n    navigation.goBack();\n  };\n  var isValidEmail = function isValidEmail(email) {\n    var emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n  };\n  return _jsxs(MainContainer, {\n    children: [_jsx(StyledTextInputs, {\n      placeholder: \"Email\",\n      value: mailUser,\n      onChangeText: function onChangeText(value) {\n        return setMail(value);\n      }\n    }), _jsx(StyledTextInputs, {\n      placeholder: \"Password\",\n      value: passwordUser,\n      onChangeText: function onChangeText(value) {\n        return setPasswordUser(value);\n      },\n      secureTextEntry: true\n    }), _jsx(StyledTextInputs, {\n      placeholder: \"Confirmation\",\n      value: confirmation,\n      onChangeText: function onChangeText(value) {\n        return setConfirmation(value);\n      },\n      secureTextEntry: true\n    }), _jsx(Button, {\n      title: \"Next\",\n      onPress: handleGoToScreenRegisterC\n    }), _jsx(Button, {\n      title: \"Back\",\n      onPress: handleGoBack\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","useNavigation","useRoute","MainContainer","Alert","Button","StyledTextInputs","jsx","_jsx","jsxs","_jsxs","ScreenRegisterB","route","_ref","params","appUser","nameUser","surnameUser","_useState","_useState2","_slicedToArray","mailUser","setMail","_useState3","_useState4","passwordUser","setPasswordUser","_useState5","_useState6","confirmation","setConfirmation","navigation","handleGoToScreenRegisterC","alert","isValidEmail","navigate","handleGoBack","goBack","email","emailRegex","test","children","placeholder","value","onChangeText","secureTextEntry","title","onPress"],"sources":["C:/Users/eloim/OneDrive/Uni/4B/EA/ProyectoEA/Frontend_/FrontEnd_EA_App/src/infrastructure/UI/screens/Register/register2.screen.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigation, useRoute } from \"@react-navigation/native\";\r\nimport MainContainer from \"../../components/containers/Main\";\r\nimport { Alert,Button,Text } from \"react-native\";\r\nimport StyledTextInputs from \"../../components/inputs/StyledTextInputs\";\r\n\r\ninterface RouteParams {\r\n  appUser?: any;\r\n  nameUser?: string;\r\n  surnameUser?: string;\r\n  mailUser?: string;\r\n  passwordUser?: string;\r\n}\r\n\r\nexport default function ScreenRegisterB() {\r\n    const route = useRoute()\r\n    const { appUser, nameUser, surnameUser}: RouteParams = route.params || {};\r\n    const [mailUser, setMail] = useState(\"\");\r\n    const [passwordUser, setPasswordUser] = useState(\"\");\r\n    const [confirmation, setConfirmation] = useState(\"\");\r\n\r\n    const navigation = useNavigation();\r\n\r\n    const handleGoToScreenRegisterC = () => {\r\n        if (!mailUser || !passwordUser || !confirmation) {\r\n          Alert.alert(\"Hello\", \"You must complete all the fields\");\r\n        } \r\n        else if(passwordUser!==confirmation){\r\n            Alert.alert(\"Password\", \"Passwords does not match\");\r\n        }\r\n        else if (!isValidEmail(mailUser)) {\r\n            Alert.alert(\"Email\", \"Please enter a valid email address\");\r\n          }\r\n        else {\r\n          navigation.navigate(\"ScreenRegisterC\", {\r\n            appUser,\r\n            nameUser,\r\n            surnameUser,\r\n            mailUser,\r\n            passwordUser,\r\n          });\r\n        }\r\n      };\r\n    \r\n      const handleGoBack = () => {\r\n        navigation.goBack();\r\n      };\r\n      const isValidEmail = (email:string) => {\r\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n        return emailRegex.test(email);\r\n      };\r\n      return (\r\n        <MainContainer>\r\n            <StyledTextInputs\r\n        placeholder=\"Email\"\r\n        value={mailUser}\r\n        onChangeText={(value: React.SetStateAction<string>) =>\r\n            setMail(value)\r\n          }\r\n      />\r\n      <StyledTextInputs\r\n        placeholder=\"Password\"\r\n        value={passwordUser}\r\n        onChangeText={(value: React.SetStateAction<string>) =>\r\n            setPasswordUser(value)\r\n          }\r\n        secureTextEntry={true}\r\n      />\r\n      <StyledTextInputs\r\n        placeholder=\"Confirmation\"\r\n        value={confirmation}\r\n        onChangeText={(value: React.SetStateAction<string>) =>\r\n            setConfirmation(value)\r\n          }\r\n        secureTextEntry={true}\r\n      />\r\n      <Button title=\"Next\" onPress={handleGoToScreenRegisterC} />\r\n      <Button title=\"Back\" onPress={handleGoBack} />\r\n        </MainContainer>\r\n      )\r\n        \r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}