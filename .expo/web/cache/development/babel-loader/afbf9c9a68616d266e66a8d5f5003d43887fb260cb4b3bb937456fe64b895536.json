{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport React, { useEffect, useState } from \"react\";\nimport Title from \"../components/texts/Title\";\nimport StyledTextInputs from \"../components/inputs/StyledTextInputs\";\nimport Button_Type_1 from \"../components/buttons/Button_Type_1\";\nimport { SessionService } from \"../../services/user/session.service\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport * as Font from \"expo-font\";\nimport \"../../../../assets/fonts/Rafaella.ttf\";\nimport * as WebBrowser from \"expo-web-browser\";\nimport * as Google from \"expo-auth-session/providers/google\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nWebBrowser.maybeCompleteAuthSession();\nfunction loadFonts() {\n  return _loadFonts.apply(this, arguments);\n}\nfunction _loadFonts() {\n  _loadFonts = _asyncToGenerator(function* () {\n    yield Font.loadAsync({\n      Rafaella: require(\"../../../../assets/fonts/Rafaella.ttf\"),\n      SFNS: require(\"../../../../assets/fonts/SFNS.otf\")\n    });\n  });\n  return _loadFonts.apply(this, arguments);\n}\nexport default function LoginScreen() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    fontsLoaded = _useState2[0],\n    setFontsLoaded = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    userInfo = _useState4[0],\n    setUserInfo = _useState4[1];\n  var _useState5 = useState(),\n    _useState6 = _slicedToArray(_useState5, 2),\n    token = _useState6[0],\n    setToken = _useState6[1];\n  var _Google$useAuthReques = Google.useAuthRequest({\n      androidClientId: \"827946583792-4eb1fuv5okt37fmnu8dleouv9442eooo.apps.googleusercontent.com\"\n    }),\n    _Google$useAuthReques2 = _slicedToArray(_Google$useAuthReques, 3),\n    request = _Google$useAuthReques2[0],\n    response = _Google$useAuthReques2[1],\n    prompAsync = _Google$useAuthReques2[2];\n  useEffect(function () {\n    loadFonts().then(function () {\n      setFontsLoaded(true);\n    });\n  }, []);\n  useEffect(function () {\n    if ((response == null ? void 0 : response.type) === \"success\") {\n      var _response$authenticat;\n      setToken((_response$authenticat = response.authentication) == null ? void 0 : _response$authenticat.accessToken);\n      getUserInfo();\n    }\n  }, [response, token]);\n  var getUserInfo = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var _response = yield fetch(\"https://www.googleapis.com/userinfo/v2/me\", {\n          headers: {\n            Authorization: \"Bearer \" + token\n          }\n        });\n        var user = yield _response.json();\n        console.log(JSON.stringify(user));\n        setUserInfo(user);\n      } catch (e) {\n        console.log(e);\n      }\n    });\n    return function getUserInfo() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var titleFont = Platform.select({\n    ios: \"Rafaella\",\n    android: \"Rafaella\"\n  });\n  var bodyFont = Platform.select({\n    ios: \"SFNS\",\n    android: \"SFNS\"\n  });\n  var navigation = useNavigation();\n  var _useState7 = useState(\"\"),\n    _useState8 = _slicedToArray(_useState7, 2),\n    inputEmail = _useState8[0],\n    setInputEmail = _useState8[1];\n  var _useState9 = useState(\"\"),\n    _useState10 = _slicedToArray(_useState9, 2),\n    inputPassword = _useState10[0],\n    setInputPassword = _useState10[1];\n  var styles = StyleSheet.create({\n    titleText: {\n      color: \"white\",\n      fontFamily: titleFont,\n      fontSize: 80,\n      marginBottom: 10\n    },\n    backgroundImage: {\n      flex: 1,\n      resizeMode: \"cover\"\n    },\n    mainContainer: {\n      flex: 1,\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    iconContainer: {\n      flex: 1,\n      alignItems: \"center\",\n      flexDirection: \"row\",\n      marginBottom: 0\n    },\n    formContainer: {\n      flex: 1,\n      alignItems: \"center\",\n      marginBottom: 0,\n      marginTop: -260\n    },\n    image: {\n      width: 30,\n      height: 30,\n      resizeMode: \"cover\"\n    },\n    iconText: {\n      color: \"white\",\n      fontFamily: titleFont,\n      fontSize: 44,\n      marginTop: 10\n    },\n    xText: {\n      color: \"white\",\n      fontFamily: bodyFont,\n      fontSize: 24,\n      marginBottom: 4,\n      marginLeft: 6,\n      marginRight: 6\n    },\n    input: {\n      width: 300,\n      height: 40\n    },\n    normalText: {\n      color: \"white\",\n      fontFamily: bodyFont,\n      fontSize: 18,\n      marginTop: 38,\n      marginBottom: -2\n    },\n    bottomText: {\n      color: \"white\",\n      fontFamily: bodyFont,\n      fontSize: 18,\n      marginTop: 44,\n      marginBottom: -4\n    },\n    signUpText: {\n      color: \"#66fcf1\",\n      fontFamily: bodyFont,\n      fontSize: 28,\n      marginTop: 6,\n      marginBottom: 0\n    }\n  });\n  if (!fontsLoaded) {\n    return null;\n  }\n  return _jsx(ImageBackground, {\n    source: require(\"../../../../assets/visualcontent/background_3.png\"),\n    style: styles.backgroundImage,\n    children: _jsxs(View, {\n      style: styles.mainContainer,\n      children: [_jsxs(View, {\n        style: styles.iconContainer,\n        children: [_jsx(Image, {\n          source: require(\"../../../../assets/logo_lplan.png\"),\n          style: styles.image\n        }), _jsx(Title, {\n          style: styles.xText,\n          children: \"x\"\n        }), _jsx(Title, {\n          style: styles.iconText,\n          children: \"Lplan\"\n        })]\n      }), _jsxs(View, {\n        style: styles.formContainer,\n        children: [_jsx(Text, {\n          style: styles.normalText,\n          children: \"Let's Go!\"\n        }), _jsx(StyledTextInputs, {\n          style: styles.input,\n          placeholder: \"Mail\",\n          value: inputEmail,\n          onChangeText: setInputEmail\n        }), _jsx(StyledTextInputs, {\n          style: styles.input,\n          placeholder: \"Password\",\n          value: inputPassword,\n          onChangeText: setInputPassword,\n          secureTextEntry: true\n        }), _jsx(Button_Type_1, {\n          onPress: function onPress() {\n            var formData = {\n              mailUser: inputEmail,\n              passwordUser: inputPassword\n            };\n            SessionService.login(formData).then(function (response) {\n              console.log(response);\n              if (response.status === 200) {\n                console.log(response.data);\n                SessionService.setCurrentUser(JSON.stringify(response.data.user.uuid), JSON.stringify(response.data.token));\n                console.log(\"_id\" + JSON.stringify(response.data.user.uuid));\n                console.log(\"token\" + JSON.stringify(response.data.token));\n                console.log(\"Login Succesfull!\");\n                navigation.navigate(\"FeedScreen\");\n              }\n            }).catch(function (error) {\n              console.error(\"error: \" + error);\n              console.log(\"error.response: \" + error.response);\n              switch (error.response.status) {\n                case 403:\n                  console.log(\"Incorrect Password\");\n                  break;\n                case 404:\n                  console.log(\"User does not exist\");\n                  navigation.navigate(\"Register\");\n                  break;\n              }\n            });\n          }\n        }), _jsx(Text, {\n          style: styles.bottomText,\n          children: \"Aren't you still an @lplan member?\"\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigation.navigate(\"Register\");\n          },\n          children: _jsx(Text, {\n            style: styles.signUpText,\n            children: \"Sign Up!\"\n          })\n        }), _jsx(Button_Type_1, {\n          onPress: function onPress() {\n            prompAsync();\n          }\n        }), _jsx(StatusBar, {})]\n      })]\n    })\n  });\n}","map":{"version":3,"names":["useNavigation","React","useEffect","useState","Title","StyledTextInputs","Button_Type_1","SessionService","Platform","StatusBar","TouchableOpacity","StyleSheet","ImageBackground","Image","View","Text","Font","WebBrowser","Google","jsx","_jsx","jsxs","_jsxs","maybeCompleteAuthSession","loadFonts","_loadFonts","apply","arguments","_asyncToGenerator","loadAsync","Rafaella","require","SFNS","LoginScreen","_useState","_useState2","_slicedToArray","fontsLoaded","setFontsLoaded","_useState3","_useState4","userInfo","setUserInfo","_useState5","_useState6","token","setToken","_Google$useAuthReques","useAuthRequest","androidClientId","_Google$useAuthReques2","request","response","prompAsync","then","type","_response$authenticat","authentication","accessToken","getUserInfo","_ref","fetch","headers","Authorization","user","json","console","log","JSON","stringify","e","titleFont","select","ios","android","bodyFont","navigation","_useState7","_useState8","inputEmail","setInputEmail","_useState9","_useState10","inputPassword","setInputPassword","styles","create","titleText","color","fontFamily","fontSize","marginBottom","backgroundImage","flex","resizeMode","mainContainer","justifyContent","alignItems","iconContainer","flexDirection","formContainer","marginTop","image","width","height","iconText","xText","marginLeft","marginRight","input","normalText","bottomText","signUpText","source","style","children","placeholder","value","onChangeText","secureTextEntry","onPress","formData","mailUser","passwordUser","login","status","data","setCurrentUser","uuid","navigate","catch","error"],"sources":["C:/Users/oscar/Desktop/proyecto/2005/FrontEnd_EA_app/my-project/src/infrastructure/UI/screens/login.screen.tsx"],"sourcesContent":["import { useNavigation } from \"@react-navigation/native\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Svg, { Defs, Path, Pattern, Use } from \"react-native-svg\";\r\nimport MainContainer from \"../components/containers/Main\";\r\nimport Title from \"../components/texts/Title\";\r\nimport SubTitle from \"../components/texts/Subtitle\";\r\nimport StyledTextInputs from \"../components/inputs/StyledTextInputs\";\r\nimport Button_Type_1 from \"../components/buttons/Button_Type_1\";\r\nimport { AuthEntity } from \"../../../domain/user/user.entity\";\r\nimport { SessionService } from \"../../services/user/session.service\";\r\nimport NormalText from \"../components/texts/NormalText\";\r\nimport {\r\n  Platform,\r\n  StatusBar,\r\n  TouchableOpacity,\r\n  StyleSheet,\r\n  ImageBackground,\r\n  Image,\r\n  View,\r\n  Text,\r\n} from \"react-native\";\r\nimport Register from \"../components/texts/Register\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport * as Font from \"expo-font\";\r\nimport \"../../../../assets/fonts/Rafaella.ttf\";\r\nimport * as WebBrowser from \"expo-web-browser\";\r\nimport * as Google from \"expo-auth-session/providers/google\";\r\n//import { Any } from \"react-spring\";\r\n//import { GoogleSigninButton } from \"@react-native-google-signin/google-signin\";\r\n\r\nWebBrowser.maybeCompleteAuthSession();\r\nasync function loadFonts() {\r\n  await Font.loadAsync({\r\n    Rafaella: require(\"../../../../assets/fonts/Rafaella.ttf\"),\r\n    SFNS: require(\"../../../../assets/fonts/SFNS.otf\"),\r\n  });\r\n}\r\n\r\nexport default function LoginScreen() {\r\n  const [fontsLoaded, setFontsLoaded] = useState(false);\r\n  const [userInfo, setUserInfo] = useState(null);\r\n  const [token, setToken]=useState<any>();\r\n  const [request, response, prompAsync] = Google.useAuthRequest({\r\n    // webClientId:\r\n    //   \"827946583792-it28br271kj89rl8es6q7kfb0i1a7vpf.apps.googleusercontent.com\",\r\n    // iosClientId:\r\n    //   \"827946583792-b17cvbctcq445s1cp350ojivmoukr3va.apps.googleusercontent.com\",\r\n    androidClientId:\r\n      \"827946583792-4eb1fuv5okt37fmnu8dleouv9442eooo.apps.googleusercontent.com\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    loadFonts().then(() => {\r\n      setFontsLoaded(true);\r\n    });\r\n  }, []);\r\n\r\n  useEffect( () => {\r\n    if (response?.type === \"success\") {\r\n      setToken(response.authentication?.accessToken);\r\n      /*const accessToken = response.authentication?.accessToken;\r\n      if (accessToken) {\r\n      getUserInfo(accessToken);\r\n      }*/\r\n      getUserInfo();\r\n    }\r\n  }, [response,token]);\r\n\r\n  // async function handleSignInWithGoogle() {\r\n  //   const user = await comprobarUser();\r\n  //   if (user == null) {\r\n  //     if (response?.type === \"success\") {\r\n  //       const accessToken = response.authentication?.accessToken;\r\n  //       if (accessToken) {\r\n  //         getUserInfo(accessToken);\r\n  //       }\r\n  //     }\r\n  //   } else {\r\n  //     //Si ya hay un usuario en Asyncstorage no debería estar en login\r\n  //   }\r\n  // }\r\n\r\n  const getUserInfo = async () => {\r\n    try {\r\n      const response = await fetch(\r\n        \"https://www.googleapis.com/userinfo/v2/me\",\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      );\r\n      const user = await response.json();\r\n      console.log(JSON.stringify(user));\r\n      setUserInfo(user);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const titleFont = Platform.select({\r\n    ios: \"Rafaella\",\r\n    android: \"Rafaella\",\r\n  });\r\n  const bodyFont = Platform.select({\r\n    ios: \"SFNS\",\r\n    android: \"SFNS\",\r\n  });\r\n\r\n  const navigation = useNavigation();\r\n\r\n  const [inputEmail, setInputEmail] = useState(\"\");\r\n  const [inputPassword, setInputPassword] = useState(\"\");\r\n\r\n  const styles = StyleSheet.create({\r\n    titleText: {\r\n      color: \"white\",\r\n      fontFamily: titleFont,\r\n      fontSize: 80,\r\n      marginBottom: 10,\r\n    },\r\n    backgroundImage: {\r\n      flex: 1,\r\n      resizeMode: \"cover\",\r\n    },\r\n    mainContainer: {\r\n      flex: 1,\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n    },\r\n    iconContainer: {\r\n      flex: 1,\r\n      alignItems: \"center\",\r\n      flexDirection: \"row\",\r\n      marginBottom: 0,\r\n    },\r\n    formContainer: {\r\n      flex: 1,\r\n      alignItems: \"center\",\r\n      marginBottom: 0,\r\n      marginTop: -260,\r\n    },\r\n    image: {\r\n      width: 30,\r\n      height: 30,\r\n      resizeMode: \"cover\",\r\n    },\r\n    iconText: {\r\n      color: \"white\",\r\n      fontFamily: titleFont,\r\n      fontSize: 44,\r\n      marginTop: 10,\r\n    },\r\n    xText: {\r\n      color: \"white\",\r\n      fontFamily: bodyFont,\r\n      fontSize: 24,\r\n      marginBottom: 4,\r\n      marginLeft: 6,\r\n      marginRight: 6,\r\n    },\r\n    input: {\r\n      width: 300,\r\n      height: 40,\r\n    },\r\n    normalText: {\r\n      color: \"white\",\r\n      fontFamily: bodyFont,\r\n      fontSize: 18,\r\n      marginTop: 38,\r\n      marginBottom: -2,\r\n    },\r\n    bottomText: {\r\n      color: \"white\",\r\n      fontFamily: bodyFont,\r\n      fontSize: 18,\r\n      marginTop: 44,\r\n      marginBottom: -4,\r\n    },\r\n    signUpText: {\r\n      color: \"#66fcf1\",\r\n      fontFamily: bodyFont,\r\n      fontSize: 28,\r\n      marginTop: 6,\r\n      marginBottom: 0,\r\n    },\r\n  });\r\n\r\n  if (!fontsLoaded) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <ImageBackground\r\n      source={require(\"../../../../assets/visualcontent/background_3.png\")}\r\n      style={styles.backgroundImage}\r\n    >\r\n      <View style={styles.mainContainer}>\r\n        <View style={styles.iconContainer}>\r\n          <Image\r\n            source={require(\"../../../../assets/logo_lplan.png\")}\r\n            style={styles.image}\r\n          />\r\n          <Title style={styles.xText}>x</Title>\r\n          <Title style={styles.iconText}>Lplan</Title>\r\n        </View>\r\n        <View style={styles.formContainer}>\r\n          <Text style={styles.normalText}>Let's Go!</Text>\r\n          <StyledTextInputs\r\n            style={styles.input}\r\n            placeholder=\"Mail\"\r\n            value={inputEmail}\r\n            onChangeText={setInputEmail}\r\n          />\r\n          <StyledTextInputs\r\n            style={styles.input}\r\n            placeholder=\"Password\"\r\n            value={inputPassword}\r\n            onChangeText={setInputPassword}\r\n            secureTextEntry={true}\r\n          />\r\n          <Button_Type_1\r\n            onPress={() => {\r\n              const formData: AuthEntity = {\r\n                mailUser: inputEmail,\r\n                passwordUser: inputPassword,\r\n              };\r\n              SessionService.login(formData)\r\n                .then((response) => {\r\n                  console.log(response);\r\n                  if (response.status === 200) {\r\n                    console.log(response.data);\r\n                    SessionService.setCurrentUser(\r\n                      JSON.stringify(response.data.user.uuid),\r\n                      JSON.stringify(response.data.token)\r\n                    );\r\n                    console.log(\r\n                      \"_id\" + JSON.stringify(response.data.user.uuid)\r\n                    );\r\n                    console.log(\"token\" + JSON.stringify(response.data.token));\r\n                    console.log(\"Login Succesfull!\");\r\n                    navigation.navigate(\r\n                      \"FeedScreen\" as never,\r\n                     // { screen: \"FeedScreen\" } as never\r\n                    );\r\n                  }\r\n                })\r\n                .catch((error) => {\r\n                  console.error(\"error: \" + error);\r\n                  console.log(\"error.response: \" + error.response);\r\n                  switch (error.response.status) {\r\n                    case 403:\r\n                      // Poner aquí el alert ...\r\n                      console.log(\"Incorrect Password\");\r\n\r\n                      break;\r\n                    case 404:\r\n                      // Poner aquí el alert ...\r\n                      console.log(\"User does not exist\");\r\n                      navigation.navigate(\"Register\" as never);\r\n                      break;\r\n                  }\r\n                });\r\n            }}\r\n          />\r\n          <Text style={styles.bottomText}>\r\n            Aren't you still an @lplan member?\r\n          </Text>\r\n          <TouchableOpacity\r\n            onPress={() => navigation.navigate(\"Register\" as never)}\r\n          >\r\n            <Text style={styles.signUpText}>Sign Up!</Text>\r\n          </TouchableOpacity>\r\n          <Button_Type_1\r\n            onPress={()=>{\r\n              prompAsync();\r\n            }}\r\n          />\r\n          <StatusBar />\r\n        </View>\r\n      </View>\r\n    </ImageBackground>\r\n  );\r\n}\r\n\r\n/*\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Svg, { Defs, Path, Pattern, Use, Image } from \"react-native-svg\";\r\nimport MainContainer from \"../components/containers/Main\";\r\nimport Title from \"../components/texts/Title\";\r\nimport SubTitle from \"../components/texts/Subtitle\";\r\nimport StyledTextInputs from \"../components/inputs/StyledTextInputs\";\r\nimport ButtonGradient from \"../components/buttons/ButtonGradient\";\r\nimport { AuthEntity } from \"../../../domain/user/user.entity\";\r\nimport { SessionService } from \"../../services/user/session.service\";\r\nimport NormalText from \"../components/texts/NormalText\";\r\nimport { Platform, StatusBar, TouchableOpacity, StyleSheet } from \"react-native\";\r\nimport Register from \"../components/texts/Register\";\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport * as Font from 'expo-font';\r\n\r\nasync function loadFonts() {\r\n  await Font.loadAsync({\r\n    'Rafaella': require('../../../../assets/fonts/Rafaella.ttf'),\r\n  });\r\n}\r\n\r\nexport default function LoginScreen() {\r\n  useEffect(() => {\r\n    loadFonts();\r\n  }, []);\r\n\r\n  const navigation = useNavigation();\r\n\r\n  const customFont = Platform.select({\r\n    ios: 'Rafaella',\r\n    android: 'Rafaella-Regular',\r\n  });\r\n\r\n  const [inputEmail, setInputEmail] = useState(\"\");\r\n  const [inputPassword, setInputPassword] = useState(\"\");\r\n\r\n  const styles = StyleSheet.create({\r\n    text_normal: {\r\n      color: 'white',\r\n      fontFamily: customFont,\r\n      fontSize: 20,\r\n      marginBottom: 10,\r\n    },\r\n  });\r\n\r\n  return (\r\n    <MainContainer>\r\n      <Title style={styles.text_normal}>Lplan</Title>\r\n      <SubTitle>Let's Go!</SubTitle>\r\n      <StyledTextInputs\r\n        placeholder=\"mail\"\r\n        value={inputEmail}\r\n        onChangeText={setInputEmail}\r\n      />\r\n      <StyledTextInputs\r\n        placeholder=\"Password\"\r\n        value={inputPassword}\r\n        onChangeText={setInputPassword}\r\n        secureTextEntry={true}\r\n      />\r\n      <ButtonGradient\r\n        onPress={() => {\r\n          const formData: AuthEntity = {\r\n            mailUser: inputEmail,\r\n            passwordUser: inputPassword,\r\n          };\r\n\r\n          console.log(\"formData \" + formData.mailUser);\r\n          console.log(\"formData \" + formData.passwordUser);\r\n          SessionService.login(formData)\r\n            .then((response) => {\r\n              console.log(response);\r\n              if (response.status === 200) {\r\n                console.log(response.data);\r\n                SessionService.setCurrentUser(\r\n                  JSON.stringify(response.data.user.uuid),\r\n                  JSON.stringify(response.data.token)\r\n                );\r\n                console.log(\"_id\" + JSON.stringify(response.data.user.uuid));\r\n                console.log(\"token\" + JSON.stringify(response.data.token));\r\n                console.log(\"Login Succesfull!\");\r\n\r\n                navigation.navigate('HomeScreen' as never);\r\n              }\r\n            })\r\n            .catch((error) => {\r\n              console.error(\"error: \" + error);\r\n              console.log(\"error.response: \" + error.response);\r\n              switch (error.response.status) {\r\n                case 403:\r\n                  // Poner aquí el alert ...\r\n                  console.log(\"Incorrect Password\");\r\n\r\n                  break;\r\n                case 404:\r\n                  // Poner aquí el alert ...\r\n                  console.log(\"User does not exist\");\r\n                  navigation.navigate(\"Register\" as never);\r\n                  break;\r\n              }\r\n            });\r\n        }}\r\n      />\r\n      <NormalText>Aren't you still an @lplan member?</NormalText>\r\n      <TouchableOpacity\r\n        onPress={() => navigation.navigate(\"Register\" as never)}\r\n      >\r\n        <Register>Sign Up!</Register>\r\n      </TouchableOpacity>\r\n      <StatusBar />\r\n    </MainContainer>\r\n  );\r\n}\r\n\r\n*/"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}