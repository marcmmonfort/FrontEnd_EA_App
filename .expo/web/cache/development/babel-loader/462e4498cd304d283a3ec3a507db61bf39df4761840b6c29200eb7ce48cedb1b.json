{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport React, { useEffect } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function SplashScreen() {\n  var navigation = useNavigation();\n  var styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center',\n      backgroundColor: \"#000000\"\n    },\n    image: {\n      width: 100,\n      height: 100,\n      resizeMode: 'cover'\n    },\n    text_normal: {\n      color: 'white',\n      fontSize: 20,\n      marginBottom: 10\n    }\n  });\n  useEffect(function () {\n    setTimeout(function () {\n      var checkToken = function () {\n        var _ref = _asyncToGenerator(function* () {\n          try {\n            var token = yield AsyncStorage.getItem('token');\n            if (token) {\n              navigation.navigate('HomeScreen');\n            } else {\n              navigation.navigate('LoginScreen');\n            }\n          } catch (error) {\n            console.log('Error al obtener el token:', error);\n          }\n        });\n        return function checkToken() {\n          return _ref.apply(this, arguments);\n        };\n      }();\n      checkToken();\n    }, 3000);\n  }, []);\n  var imageUrl = require(\"../../../../assets/logo_lplan.png\");\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Text, {\n        style: styles.text_normal,\n        children: \"Welcome to LPLAN!\"\n      }), _jsx(Image, {\n        source: imageUrl,\n        style: styles.image\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","useEffect","Image","View","StyleSheet","Text","useNavigation","AsyncStorage","jsx","_jsx","jsxs","_jsxs","SplashScreen","navigation","styles","create","container","flex","justifyContent","alignItems","backgroundColor","image","width","height","resizeMode","text_normal","color","fontSize","marginBottom","setTimeout","checkToken","_ref","_asyncToGenerator","token","getItem","navigate","error","console","log","apply","arguments","imageUrl","require","style","children","source"],"sources":["C:/Users/oscar/Desktop/proyecto/2005/FrontEnd_EA_app/my-project/src/infrastructure/UI/screens/splash.screen.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { ImageBackground, Image, View, StyleSheet, Text } from 'react-native';\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nexport default function SplashScreen() {\r\n  const navigation = useNavigation();\r\n\r\n  const styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        backgroundColor: \"#000000\",\r\n    },\r\n    image: {\r\n      width: 100,\r\n      height: 100,\r\n      resizeMode: 'cover',\r\n    },\r\n    text_normal: {\r\n        color: 'white',\r\n        //fontFamily: 'Arial',\r\n        fontSize: 20,\r\n        marginBottom: 10,\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n        const checkToken = async () => {\r\n            try {\r\n              const token = await AsyncStorage.getItem('token');\r\n              if (token) {\r\n                navigation.navigate('HomeScreen' as never);\r\n                //navigation.navigate('ChatA' as never);\r\n              } else {\r\n                navigation.navigate('LoginScreen' as never);\r\n                //navigation.navigate('ChatA' as never);\r\n              }\r\n            } catch (error) {\r\n              console.log('Error al obtener el token:', error);\r\n            }\r\n          };\r\n        checkToken();\r\n    }, 3000);\r\n  }, []);\r\n\r\n  const imageUrl = require('../../../../assets/logo_lplan.png');\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n        <View style={styles.container}>\r\n            <Text style={styles.text_normal}>Welcome to LPLAN!</Text>\r\n            <Image source={imageUrl} style={styles.image} />\r\n        </View>\r\n    </View>\r\n  );\r\n}"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,OAAAC,KAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAEzC,SAASC,aAAa,QAAQ,0BAA0B;AACxD,OAAOC,YAAY,MAAM,2CAA2C;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAErE,eAAe,SAASC,YAAYA,CAAA,EAAG;EACrC,IAAMC,UAAU,GAAGP,aAAa,CAAC,CAAC;EAElC,IAAMQ,MAAM,GAAGV,UAAU,CAACW,MAAM,CAAC;IAC/BC,SAAS,EAAE;MACPC,IAAI,EAAE,CAAC;MACPC,cAAc,EAAE,QAAQ;MACxBC,UAAU,EAAE,QAAQ;MACpBC,eAAe,EAAE;IACrB,CAAC;IACDC,KAAK,EAAE;MACLC,KAAK,EAAE,GAAG;MACVC,MAAM,EAAE,GAAG;MACXC,UAAU,EAAE;IACd,CAAC;IACDC,WAAW,EAAE;MACTC,KAAK,EAAE,OAAO;MAEdC,QAAQ,EAAE,EAAE;MACZC,YAAY,EAAE;IAClB;EACF,CAAC,CAAC;EAEF3B,SAAS,CAAC,YAAM;IACd4B,UAAU,CAAC,YAAM;MACb,IAAMC,UAAU;QAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;UAC3B,IAAI;YACF,IAAMC,KAAK,SAAS1B,YAAY,CAAC2B,OAAO,CAAC,OAAO,CAAC;YACjD,IAAID,KAAK,EAAE;cACTpB,UAAU,CAACsB,QAAQ,CAAC,YAAqB,CAAC;YAE5C,CAAC,MAAM;cACLtB,UAAU,CAACsB,QAAQ,CAAC,aAAsB,CAAC;YAE7C;UACF,CAAC,CAAC,OAAOC,KAAK,EAAE;YACdC,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEF,KAAK,CAAC;UAClD;QACF,CAAC;QAAA,gBAbGN,UAAUA,CAAA;UAAA,OAAAC,IAAA,CAAAQ,KAAA,OAAAC,SAAA;QAAA;MAAA,GAab;MACHV,UAAU,CAAC,CAAC;IAChB,CAAC,EAAE,IAAI,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMW,QAAQ,GAAGC,OAAO,oCAAoC,CAAC;EAE7D,OACEjC,IAAA,CAACN,IAAI;IAACwC,KAAK,EAAE7B,MAAM,CAACE,SAAU;IAAA4B,QAAA,EAC1BjC,KAAA,CAACR,IAAI;MAACwC,KAAK,EAAE7B,MAAM,CAACE,SAAU;MAAA4B,QAAA,GAC1BnC,IAAA,CAACJ,IAAI;QAACsC,KAAK,EAAE7B,MAAM,CAACW,WAAY;QAAAmB,QAAA,EAAC;MAAiB,CAAM,CAAC,EACzDnC,IAAA,CAACP,KAAK;QAAC2C,MAAM,EAAEJ,QAAS;QAACE,KAAK,EAAE7B,MAAM,CAACO;MAAM,CAAE,CAAC;IAAA,CAC9C;EAAC,CACL,CAAC;AAEX"},"metadata":{},"sourceType":"module","externalDependencies":[]}