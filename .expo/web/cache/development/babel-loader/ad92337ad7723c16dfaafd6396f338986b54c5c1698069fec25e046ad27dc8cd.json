{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport React, { useEffect, useState, useRef } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { Marker } from \"react-native-maps\";\nimport MapView from 'react-native-maps';\nimport SearchBar from \"../components/searchbar/searchbar\";\nimport * as Font from 'expo-font';\nimport * as Location from 'expo-location';\nimport { LocationService } from \"../../../infrastructure/services/location/location.service\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction loadFonts() {\n  return _loadFonts.apply(this, arguments);\n}\nfunction _loadFonts() {\n  _loadFonts = _asyncToGenerator(function* () {\n    yield Font.loadAsync({\n      'Rafaella': require(\"../../../../assets/fonts/Rafaella.ttf\"),\n      'SFNS': require(\"../../../../assets/fonts/SFNS.otf\")\n    });\n  });\n  return _loadFonts.apply(this, arguments);\n}\nvar MapScreen = function MapScreen() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    locations = _useState2[0],\n    setLocationList = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    searchResults = _useState4[0],\n    setSearchResults = _useState4[1];\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    searchValue = _useState6[0],\n    setSearchValue = _useState6[1];\n  var mapRef = useRef(null);\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    selectedLocation = _useState8[0],\n    setSelectedLocation = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    fontsLoaded = _useState10[0],\n    setFontsLoaded = _useState10[1];\n  var locationIcon = require(\"../../../../assets/location_apple.png\");\n  var fireIcon = require(\"../../../../assets/location_fire.png\");\n  var _useState11 = useState([]),\n    _useState12 = _slicedToArray(_useState11, 2),\n    activities = _useState12[0],\n    setActivities = _useState12[1];\n  useEffect(function () {\n    fetchActivities();\n  }, []);\n  var fetchActivities = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var response = yield LocationService.getLocations();\n        if (response) {\n          var _activities = response.data;\n          setActivities(_activities);\n        } else {\n          console.error('Error fetching activities: Response is undefined');\n        }\n      } catch (error) {\n        console.error('Error fetching activities:', error);\n      }\n    });\n    return function fetchActivities() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    loadFonts().then(function () {\n      setFontsLoaded(true);\n    });\n  }, []);\n  var titleFont = Platform.select({\n    ios: 'Rafaella',\n    android: 'Rafaella'\n  });\n  var bodyFont = Platform.select({\n    ios: 'SFNS',\n    android: 'SFNS'\n  });\n  useEffect(function () {\n    var getCurrentLocation = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        try {\n          var _yield$Location$reque = yield Location.requestForegroundPermissionsAsync(),\n            status = _yield$Location$reque.status;\n          if (status === \"granted\") {\n            var _mapRef$current;\n            var location = yield Location.getCurrentPositionAsync({});\n            var _location$coords = location.coords,\n              latitude = _location$coords.latitude,\n              longitude = _location$coords.longitude;\n            var region = {\n              latitude: latitude,\n              longitude: longitude,\n              latitudeDelta: 0.0922,\n              longitudeDelta: 0.0421\n            };\n            (_mapRef$current = mapRef.current) == null ? void 0 : _mapRef$current.animateToRegion(region);\n          }\n        } catch (error) {\n          console.log(\"Error al obtener la ubicación:\", error);\n        }\n      });\n      return function getCurrentLocation() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    getCurrentLocation();\n  }, []);\n  var handleSearchWrapper = function handleSearchWrapper(searchText) {\n    setSearchValue(searchText);\n    handleSearch();\n  };\n  var handleSearch = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      try {\n        var response = yield fetch(\"https://nominatim.openstreetmap.org/search?q=\" + searchValue + \"&format=json\");\n        console.log(\"SE ESTÁ BUSCANDO:\", \"https://nominatim.openstreetmap.org/search?q=\" + searchValue + \"&format=json\");\n        var data = yield response.json();\n        var limitedResults = data.slice(0, 3);\n        setSearchResults(limitedResults);\n      } catch (error) {\n        console.error(\"Error en la búsqueda:\", error);\n      }\n    });\n    return function handleSearch() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    console.log(\"RESPUESTA LOCATIONS:\", searchResults);\n  }, [searchResults]);\n  var calculateZoom = function calculateZoom(importance) {\n    return Math.floor(18 - Math.log2(importance));\n  };\n  var handleSearchResult = function handleSearchResult(result) {\n    var _mapRef$current2;\n    setSelectedLocation(result);\n    var lat = result.lat,\n      lon = result.lon,\n      importance = result.importance;\n    var zoom = calculateZoom(importance);\n    var region = {\n      latitude: parseFloat(lat),\n      longitude: parseFloat(lon),\n      latitudeDelta: 0.0922,\n      longitudeDelta: 0.0922\n    };\n    (_mapRef$current2 = mapRef.current) == null ? void 0 : _mapRef$current2.animateToRegion(region, zoom);\n  };\n  var styles = StyleSheet.create({\n    container: {\n      flex: 1\n    },\n    map: {\n      width: '100%',\n      height: '100%'\n    },\n    searchContainer: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      right: 0,\n      zIndex: 1,\n      padding: 0\n    },\n    locationList: {\n      backgroundColor: 'transparent',\n      borderRadius: 0,\n      padding: 0,\n      marginTop: -18,\n      marginLeft: 20,\n      marginRight: 20\n    },\n    locationItem: {\n      borderRadius: 8,\n      overflow: 'hidden',\n      backgroundColor: 'rgba(0, 0, 0, 0.2)',\n      marginBottom: 10\n    },\n    locationResult: {\n      backgroundColor: 'rgba(0, 0, 0, 0.2)',\n      padding: 6,\n      color: 'white',\n      fontFamily: bodyFont,\n      fontSize: 14,\n      marginBottom: 0\n    },\n    selectedLocationResult: {\n      backgroundColor: 'rgba(0, 0, 0, 0.5)',\n      padding: 6,\n      color: 'white',\n      fontFamily: bodyFont,\n      fontSize: 14,\n      marginBottom: 0\n    },\n    selectedLocationItem: {}\n  });\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(MapView, {\n      style: styles.map,\n      ref: mapRef,\n      children: [searchResults.map(function (result) {\n        return _jsx(Marker, {\n          coordinate: {\n            latitude: parseFloat(result.lat),\n            longitude: parseFloat(result.lon)\n          },\n          title: result.display_name,\n          description: result.address,\n          onPress: function onPress() {\n            return handleSearchResult(result);\n          },\n          pinColor: result === selectedLocation ? \"blue\" : \"red\"\n        }, result.place_id);\n      }), activities.map(function (activity) {\n        return _jsx(Marker, {\n          coordinate: {\n            latitude: parseFloat(activity.latLocation),\n            longitude: parseFloat(activity.lonLocation)\n          },\n          title: activity.nameLocation,\n          description: activity.descriptionLocation,\n          image: fireIcon,\n          style: {\n            width: 40,\n            height: 40\n          }\n        }, activity.uuid);\n      })]\n    }), _jsxs(View, {\n      style: styles.searchContainer,\n      children: [_jsx(SearchBar, {\n        onSearch: handleSearchWrapper\n      }), _jsx(View, {\n        style: styles.locationList,\n        children: searchResults.map(function (result) {\n          return _jsx(TouchableOpacity, {\n            style: [styles.locationItem, result === selectedLocation && styles.selectedLocationItem],\n            onPress: function onPress() {\n              return handleSearchResult(result);\n            },\n            children: _jsx(Text, {\n              style: [styles.locationResult, result === selectedLocation && styles.selectedLocationResult],\n              children: result.display_name\n            })\n          }, result.place_id);\n        })\n      })]\n    })]\n  });\n};\nexport default MapScreen;","map":{"version":3,"names":["React","useEffect","useState","useRef","View","StyleSheet","Text","TouchableOpacity","Platform","Marker","MapView","SearchBar","Font","Location","LocationService","jsx","_jsx","jsxs","_jsxs","loadFonts","_loadFonts","apply","arguments","_asyncToGenerator","loadAsync","require","MapScreen","_useState","_useState2","_slicedToArray","locations","setLocationList","_useState3","_useState4","searchResults","setSearchResults","_useState5","_useState6","searchValue","setSearchValue","mapRef","_useState7","_useState8","selectedLocation","setSelectedLocation","_useState9","_useState10","fontsLoaded","setFontsLoaded","locationIcon","fireIcon","_useState11","_useState12","activities","setActivities","fetchActivities","_ref","response","getLocations","data","console","error","then","titleFont","select","ios","android","bodyFont","getCurrentLocation","_ref2","_yield$Location$reque","requestForegroundPermissionsAsync","status","_mapRef$current","location","getCurrentPositionAsync","_location$coords","coords","latitude","longitude","region","latitudeDelta","longitudeDelta","current","animateToRegion","log","handleSearchWrapper","searchText","handleSearch","_ref3","fetch","json","limitedResults","slice","calculateZoom","importance","Math","floor","log2","handleSearchResult","result","_mapRef$current2","lat","lon","zoom","parseFloat","styles","create","container","flex","map","width","height","searchContainer","position","top","left","right","zIndex","padding","locationList","backgroundColor","borderRadius","marginTop","marginLeft","marginRight","locationItem","overflow","marginBottom","locationResult","color","fontFamily","fontSize","selectedLocationResult","selectedLocationItem","style","children","ref","coordinate","title","display_name","description","address","onPress","pinColor","place_id","activity","latLocation","lonLocation","nameLocation","descriptionLocation","image","uuid","onSearch"],"sources":["C:/Users/eloim/Uni/ProyectoEA/Frontend_/FrontEnd_EA_App/src/infrastructure/UI/screens/map.screen.tsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport { View, StyleSheet, Text, TouchableOpacity, Platform } from \"react-native\";\r\nimport { ImageBackground, Image} from 'react-native';\r\nimport { Callout, Marker } from \"react-native-maps\";\r\nimport MapView from 'react-native-maps';\r\nimport { LocationEntity } from \"../../../domain/location/location.entity\";\r\nimport SearchBar from \"../components/searchbar/searchbar\";\r\nimport * as Font from 'expo-font';\r\nimport * as Location from 'expo-location';\r\nimport { LocationService } from \"../../../infrastructure/services/location/location.service\";\r\n\r\nasync function loadFonts() {\r\n  await Font.loadAsync({\r\n    'Rafaella': require('../../../../assets/fonts/Rafaella.ttf'),\r\n    'SFNS': require('../../../../assets/fonts/SFNS.otf'),\r\n  });\r\n}\r\n\r\nconst MapScreen = () => {\r\n  const [locations, setLocationList] = useState<LocationEntity[]>([]);\r\n  const [searchResults, setSearchResults] = useState<any[]>([]);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const mapRef = useRef<MapView>(null);\r\n  const [selectedLocation, setSelectedLocation] = useState<any>(null);\r\n  const [fontsLoaded, setFontsLoaded] = useState(false);\r\n\r\n  const locationIcon = require('../../../../assets/location_apple.png');\r\n  const fireIcon = require('../../../../assets/location_fire.png');\r\n\r\n  const [activities, setActivities] = useState<LocationEntity[]>([]);  // Estas son las Locations pero nuestras (las de las actividades).\r\n\r\n  useEffect(() => {\r\n    fetchActivities();\r\n  }, []);\r\n\r\n  const fetchActivities = async () => {\r\n    try {\r\n      const response = await LocationService.getLocations();\r\n      if (response) {\r\n        const activities = response.data as LocationEntity[];\r\n        setActivities(activities);\r\n      } else {\r\n        console.error('Error fetching activities: Response is undefined');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching activities:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadFonts().then(() => {\r\n      setFontsLoaded(true);\r\n    });\r\n  }, []);\r\n\r\n  const titleFont = Platform.select({\r\n    ios: 'Rafaella',\r\n    android: 'Rafaella',\r\n  });\r\n  const bodyFont = Platform.select({\r\n    ios: 'SFNS',\r\n    android: 'SFNS',\r\n  });\r\n\r\n\r\n  useEffect(() => {\r\n    const getCurrentLocation = async () => {\r\n      try {\r\n        const { status } = await Location.requestForegroundPermissionsAsync();\r\n\r\n        if (status === \"granted\") {\r\n          const location = await Location.getCurrentPositionAsync({});\r\n\r\n          const { latitude, longitude } = location.coords;\r\n\r\n          const region = {\r\n            latitude,\r\n            longitude,\r\n            latitudeDelta: 0.0922,\r\n            longitudeDelta: 0.0421,\r\n          };\r\n\r\n          mapRef.current?.animateToRegion(region);\r\n        }\r\n      } catch (error) {\r\n        console.log(\"Error al obtener la ubicación:\", error);\r\n      }\r\n    };\r\n\r\n    getCurrentLocation();\r\n  }, []);\r\n\r\n  const handleSearchWrapper = (searchText: string) => {\r\n    setSearchValue(searchText);\r\n    handleSearch();\r\n  };\r\n\r\n  const handleSearch = async () => {\r\n    try {\r\n      const response = await fetch(\r\n        `https://nominatim.openstreetmap.org/search?q=${searchValue}&format=json`\r\n      );\r\n      console.log(\"SE ESTÁ BUSCANDO:\", `https://nominatim.openstreetmap.org/search?q=${searchValue}&format=json`);\r\n      const data = await response.json();\r\n      const limitedResults = data.slice(0, 3);\r\n      setSearchResults(limitedResults);\r\n    } catch (error) {\r\n      console.error(\"Error en la búsqueda:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"RESPUESTA LOCATIONS:\", searchResults);\r\n  }, [searchResults]);\r\n\r\n  const calculateZoom = (importance: number) => {\r\n    return Math.floor(18 - Math.log2(importance));\r\n  };\r\n\r\n  const handleSearchResult = (result: any) => {\r\n    setSelectedLocation(result);\r\n    const { lat, lon, importance } = result;\r\n    const zoom = calculateZoom(importance);\r\n    const region = {\r\n      latitude: parseFloat(lat),\r\n      longitude: parseFloat(lon),\r\n      latitudeDelta: 0.0922,\r\n      longitudeDelta: 0.0922,\r\n    };\r\n    mapRef.current?.animateToRegion(region, zoom);\r\n  };\r\n\r\n  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - \r\n\r\n  const styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n    },\r\n    map: {\r\n      width: '100%',\r\n      height: '100%',\r\n    },\r\n    searchContainer: {\r\n      position: 'absolute',\r\n      top: 0,\r\n      left: 0,\r\n      right: 0,\r\n      zIndex: 1,\r\n      padding: 0,\r\n    },\r\n    locationList: {\r\n      backgroundColor: 'transparent',\r\n      borderRadius: 0,\r\n      padding: 0,\r\n      marginTop: -18,\r\n      marginLeft: 20,\r\n      marginRight: 20,\r\n    },\r\n    locationItem: {\r\n      borderRadius: 8,\r\n      overflow: 'hidden',\r\n      backgroundColor: 'rgba(0, 0, 0, 0.2)',\r\n      marginBottom: 10,\r\n    },\r\n    locationResult: {\r\n      backgroundColor: 'rgba(0, 0, 0, 0.2)',\r\n      padding: 6,\r\n      color: 'white',\r\n      fontFamily: bodyFont,\r\n      fontSize: 14,\r\n      marginBottom: 0,\r\n    },\r\n    selectedLocationResult: {\r\n      backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n      padding: 6,\r\n      color: 'white',\r\n      fontFamily: bodyFont,\r\n      fontSize: 14,\r\n      marginBottom: 0,\r\n    },\r\n    selectedLocationItem: {},\r\n  });\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <MapView style={styles.map} ref={mapRef}>\r\n        {searchResults.map((result) => (\r\n          <Marker\r\n            key={result.place_id}\r\n            coordinate={{\r\n              latitude: parseFloat(result.lat),\r\n              longitude: parseFloat(result.lon),\r\n            }}\r\n            title={result.display_name}\r\n            description={result.address}\r\n            onPress={() => handleSearchResult(result)}\r\n            pinColor={result === selectedLocation ? \"blue\" : \"red\"}\r\n          />\r\n        ))}\r\n  \r\n        {activities.map((activity) => (\r\n        <Marker\r\n          key={activity.uuid}\r\n          coordinate={{\r\n            latitude: parseFloat(activity.latLocation),\r\n            longitude: parseFloat(activity.lonLocation),\r\n          }}\r\n          title={activity.nameLocation}\r\n          description={activity.descriptionLocation}\r\n          image={fireIcon}\r\n          style={{ width: 40, height: 40 }} \r\n        />\r\n      ))}\r\n      </MapView>\r\n      <View style={styles.searchContainer}>\r\n        <SearchBar onSearch={handleSearchWrapper} />\r\n        <View style={styles.locationList}>\r\n          {searchResults.map((result) => (\r\n            <TouchableOpacity\r\n              key={result.place_id}\r\n              style={[\r\n                styles.locationItem,\r\n                result === selectedLocation && styles.selectedLocationItem,\r\n              ]}\r\n              onPress={() => handleSearchResult(result)}\r\n            >\r\n              <Text\r\n                style={[\r\n                  styles.locationResult,\r\n                  result === selectedLocation && styles.selectedLocationResult,\r\n                ]}\r\n              >\r\n                {result.display_name}\r\n              </Text>\r\n            </TouchableOpacity>\r\n          ))}\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n  \r\n\r\n};\r\n\r\nexport default MapScreen;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,QAAA;AAG3D,SAAkBC,MAAM,QAAQ,mBAAmB;AACnD,OAAOC,OAAO,MAAM,mBAAmB;AAEvC,OAAOC,SAAS;AAChB,OAAO,KAAKC,IAAI,MAAM,WAAW;AACjC,OAAO,KAAKC,QAAQ,MAAM,eAAe;AACzC,SAASC,eAAe;AAAqE,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAAA,SAE9EC,SAASA,CAAA;EAAA,OAAAC,UAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAF,WAAA;EAAAA,UAAA,GAAAG,iBAAA,CAAxB,aAA2B;IACzB,MAAMX,IAAI,CAACY,SAAS,CAAC;MACnB,UAAU,EAAEC,OAAO,wCAAwC,CAAC;MAC5D,MAAM,EAAEA,OAAO,oCAAoC;IACrD,CAAC,CAAC;EACJ,CAAC;EAAA,OAAAL,UAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAED,IAAMI,SAAS,GAAG,SAAZA,SAASA,CAAA,EAAS;EACtB,IAAAC,SAAA,GAAqCzB,QAAQ,CAAmB,EAAE,CAAC;IAAA0B,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA5DG,SAAS,GAAAF,UAAA;IAAEG,eAAe,GAAAH,UAAA;EACjC,IAAAI,UAAA,GAA0C9B,QAAQ,CAAQ,EAAE,CAAC;IAAA+B,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAtDE,aAAa,GAAAD,UAAA;IAAEE,gBAAgB,GAAAF,UAAA;EACtC,IAAAG,UAAA,GAAsClC,QAAQ,CAAC,EAAE,CAAC;IAAAmC,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAA3CE,WAAW,GAAAD,UAAA;IAAEE,cAAc,GAAAF,UAAA;EAClC,IAAMG,MAAM,GAAGrC,MAAM,CAAU,IAAI,CAAC;EACpC,IAAAsC,UAAA,GAAgDvC,QAAQ,CAAM,IAAI,CAAC;IAAAwC,UAAA,GAAAb,cAAA,CAAAY,UAAA;IAA5DE,gBAAgB,GAAAD,UAAA;IAAEE,mBAAmB,GAAAF,UAAA;EAC5C,IAAAG,UAAA,GAAsC3C,QAAQ,CAAC,KAAK,CAAC;IAAA4C,WAAA,GAAAjB,cAAA,CAAAgB,UAAA;IAA9CE,WAAW,GAAAD,WAAA;IAAEE,cAAc,GAAAF,WAAA;EAElC,IAAMG,YAAY,GAAGxB,OAAO,wCAAwC,CAAC;EACrE,IAAMyB,QAAQ,GAAGzB,OAAO,uCAAuC,CAAC;EAEhE,IAAA0B,WAAA,GAAoCjD,QAAQ,CAAmB,EAAE,CAAC;IAAAkD,WAAA,GAAAvB,cAAA,CAAAsB,WAAA;IAA3DE,UAAU,GAAAD,WAAA;IAAEE,aAAa,GAAAF,WAAA;EAEhCnD,SAAS,CAAC,YAAM;IACdsD,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMA,eAAe;IAAA,IAAAC,IAAA,GAAAjC,iBAAA,CAAG,aAAY;MAClC,IAAI;QACF,IAAMkC,QAAQ,SAAS3C,eAAe,CAAC4C,YAAY,CAAC,CAAC;QACrD,IAAID,QAAQ,EAAE;UACZ,IAAMJ,WAAU,GAAGI,QAAQ,CAACE,IAAwB;UACpDL,aAAa,CAACD,WAAU,CAAC;QAC3B,CAAC,MAAM;UACLO,OAAO,CAACC,KAAK,CAAC,kDAAkD,CAAC;QACnE;MACF,CAAC,CAAC,OAAOA,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF,CAAC;IAAA,gBAZKN,eAAeA,CAAA;MAAA,OAAAC,IAAA,CAAAnC,KAAA,OAAAC,SAAA;IAAA;EAAA,GAYpB;EAEDrB,SAAS,CAAC,YAAM;IACdkB,SAAS,CAAC,CAAC,CAAC2C,IAAI,CAAC,YAAM;MACrBd,cAAc,CAAC,IAAI,CAAC;IACtB,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMe,SAAS,GAAGvD,QAAQ,CAACwD,MAAM,CAAC;IAChCC,GAAG,EAAE,UAAU;IACfC,OAAO,EAAE;EACX,CAAC,CAAC;EACF,IAAMC,QAAQ,GAAG3D,QAAQ,CAACwD,MAAM,CAAC;IAC/BC,GAAG,EAAE,MAAM;IACXC,OAAO,EAAE;EACX,CAAC,CAAC;EAGFjE,SAAS,CAAC,YAAM;IACd,IAAMmE,kBAAkB;MAAA,IAAAC,KAAA,GAAA9C,iBAAA,CAAG,aAAY;QACrC,IAAI;UACF,IAAA+C,qBAAA,SAAyBzD,QAAQ,CAAC0D,iCAAiC,CAAC,CAAC;YAA7DC,MAAM,GAAAF,qBAAA,CAANE,MAAM;UAEd,IAAIA,MAAM,KAAK,SAAS,EAAE;YAAA,IAAAC,eAAA;YACxB,IAAMC,QAAQ,SAAS7D,QAAQ,CAAC8D,uBAAuB,CAAC,CAAC,CAAC,CAAC;YAE3D,IAAAC,gBAAA,GAAgCF,QAAQ,CAACG,MAAM;cAAvCC,QAAQ,GAAAF,gBAAA,CAARE,QAAQ;cAAEC,SAAS,GAAAH,gBAAA,CAATG,SAAS;YAE3B,IAAMC,MAAM,GAAG;cACbF,QAAQ,EAARA,QAAQ;cACRC,SAAS,EAATA,SAAS;cACTE,aAAa,EAAE,MAAM;cACrBC,cAAc,EAAE;YAClB,CAAC;YAED,CAAAT,eAAA,GAAAjC,MAAM,CAAC2C,OAAO,qBAAdV,eAAA,CAAgBW,eAAe,CAACJ,MAAM,CAAC;UACzC;QACF,CAAC,CAAC,OAAOnB,KAAK,EAAE;UACdD,OAAO,CAACyB,GAAG,CAAC,gCAAgC,EAAExB,KAAK,CAAC;QACtD;MACF,CAAC;MAAA,gBArBKO,kBAAkBA,CAAA;QAAA,OAAAC,KAAA,CAAAhD,KAAA,OAAAC,SAAA;MAAA;IAAA,GAqBvB;IAED8C,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMkB,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAIC,UAAkB,EAAK;IAClDhD,cAAc,CAACgD,UAAU,CAAC;IAC1BC,YAAY,CAAC,CAAC;EAChB,CAAC;EAED,IAAMA,YAAY;IAAA,IAAAC,KAAA,GAAAlE,iBAAA,CAAG,aAAY;MAC/B,IAAI;QACF,IAAMkC,QAAQ,SAASiC,KAAK,mDACsBpD,WAAW,iBAC7D,CAAC;QACDsB,OAAO,CAACyB,GAAG,CAAC,mBAAmB,oDAAkD/C,WAAW,iBAAc,CAAC;QAC3G,IAAMqB,IAAI,SAASF,QAAQ,CAACkC,IAAI,CAAC,CAAC;QAClC,IAAMC,cAAc,GAAGjC,IAAI,CAACkC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;QACvC1D,gBAAgB,CAACyD,cAAc,CAAC;MAClC,CAAC,CAAC,OAAO/B,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC;IAAA,gBAZK2B,YAAYA,CAAA;MAAA,OAAAC,KAAA,CAAApE,KAAA,OAAAC,SAAA;IAAA;EAAA,GAYjB;EAEDrB,SAAS,CAAC,YAAM;IACd2D,OAAO,CAACyB,GAAG,CAAC,sBAAsB,EAAEnD,aAAa,CAAC;EACpD,CAAC,EAAE,CAACA,aAAa,CAAC,CAAC;EAEnB,IAAM4D,aAAa,GAAG,SAAhBA,aAAaA,CAAIC,UAAkB,EAAK;IAC5C,OAAOC,IAAI,CAACC,KAAK,CAAC,EAAE,GAAGD,IAAI,CAACE,IAAI,CAACH,UAAU,CAAC,CAAC;EAC/C,CAAC;EAED,IAAMI,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAIC,MAAW,EAAK;IAAA,IAAAC,gBAAA;IAC1CzD,mBAAmB,CAACwD,MAAM,CAAC;IAC3B,IAAQE,GAAG,GAAsBF,MAAM,CAA/BE,GAAG;MAAEC,GAAG,GAAiBH,MAAM,CAA1BG,GAAG;MAAER,UAAU,GAAKK,MAAM,CAArBL,UAAU;IAC5B,IAAMS,IAAI,GAAGV,aAAa,CAACC,UAAU,CAAC;IACtC,IAAMf,MAAM,GAAG;MACbF,QAAQ,EAAE2B,UAAU,CAACH,GAAG,CAAC;MACzBvB,SAAS,EAAE0B,UAAU,CAACF,GAAG,CAAC;MAC1BtB,aAAa,EAAE,MAAM;MACrBC,cAAc,EAAE;IAClB,CAAC;IACD,CAAAmB,gBAAA,GAAA7D,MAAM,CAAC2C,OAAO,qBAAdkB,gBAAA,CAAgBjB,eAAe,CAACJ,MAAM,EAAEwB,IAAI,CAAC;EAC/C,CAAC;EAID,IAAME,MAAM,GAAGrG,UAAU,CAACsG,MAAM,CAAC;IAC/BC,SAAS,EAAE;MACTC,IAAI,EAAE;IACR,CAAC;IACDC,GAAG,EAAE;MACHC,KAAK,EAAE,MAAM;MACbC,MAAM,EAAE;IACV,CAAC;IACDC,eAAe,EAAE;MACfC,QAAQ,EAAE,UAAU;MACpBC,GAAG,EAAE,CAAC;MACNC,IAAI,EAAE,CAAC;MACPC,KAAK,EAAE,CAAC;MACRC,MAAM,EAAE,CAAC;MACTC,OAAO,EAAE;IACX,CAAC;IACDC,YAAY,EAAE;MACZC,eAAe,EAAE,aAAa;MAC9BC,YAAY,EAAE,CAAC;MACfH,OAAO,EAAE,CAAC;MACVI,SAAS,EAAE,CAAC,EAAE;MACdC,UAAU,EAAE,EAAE;MACdC,WAAW,EAAE;IACf,CAAC;IACDC,YAAY,EAAE;MACZJ,YAAY,EAAE,CAAC;MACfK,QAAQ,EAAE,QAAQ;MAClBN,eAAe,EAAE,oBAAoB;MACrCO,YAAY,EAAE;IAChB,CAAC;IACDC,cAAc,EAAE;MACdR,eAAe,EAAE,oBAAoB;MACrCF,OAAO,EAAE,CAAC;MACVW,KAAK,EAAE,OAAO;MACdC,UAAU,EAAEhE,QAAQ;MACpBiE,QAAQ,EAAE,EAAE;MACZJ,YAAY,EAAE;IAChB,CAAC;IACDK,sBAAsB,EAAE;MACtBZ,eAAe,EAAE,oBAAoB;MACrCF,OAAO,EAAE,CAAC;MACVW,KAAK,EAAE,OAAO;MACdC,UAAU,EAAEhE,QAAQ;MACpBiE,QAAQ,EAAE,EAAE;MACZJ,YAAY,EAAE;IAChB,CAAC;IACDM,oBAAoB,EAAE,CAAC;EACzB,CAAC,CAAC;EAEF,OACEpH,KAAA,CAACd,IAAI;IAACmI,KAAK,EAAE7B,MAAM,CAACE,SAAU;IAAA4B,QAAA,GAC5BtH,KAAA,CAACR,OAAO;MAAC6H,KAAK,EAAE7B,MAAM,CAACI,GAAI;MAAC2B,GAAG,EAAEjG,MAAO;MAAAgG,QAAA,GACrCtG,aAAa,CAAC4E,GAAG,CAAC,UAACV,MAAM;QAAA,OACxBpF,IAAA,CAACP,MAAM;UAELiI,UAAU,EAAE;YACV5D,QAAQ,EAAE2B,UAAU,CAACL,MAAM,CAACE,GAAG,CAAC;YAChCvB,SAAS,EAAE0B,UAAU,CAACL,MAAM,CAACG,GAAG;UAClC,CAAE;UACFoC,KAAK,EAAEvC,MAAM,CAACwC,YAAa;UAC3BC,WAAW,EAAEzC,MAAM,CAAC0C,OAAQ;UAC5BC,OAAO,EAAE,SAAAA,QAAA;YAAA,OAAM5C,kBAAkB,CAACC,MAAM,CAAC;UAAA,CAAC;UAC1C4C,QAAQ,EAAE5C,MAAM,KAAKzD,gBAAgB,GAAG,MAAM,GAAG;QAAM,GARlDyD,MAAM,CAAC6C,QASb,CAAC;MAAA,CACH,CAAC,EAED5F,UAAU,CAACyD,GAAG,CAAC,UAACoC,QAAQ;QAAA,OACzBlI,IAAA,CAACP,MAAM;UAELiI,UAAU,EAAE;YACV5D,QAAQ,EAAE2B,UAAU,CAACyC,QAAQ,CAACC,WAAW,CAAC;YAC1CpE,SAAS,EAAE0B,UAAU,CAACyC,QAAQ,CAACE,WAAW;UAC5C,CAAE;UACFT,KAAK,EAAEO,QAAQ,CAACG,YAAa;UAC7BR,WAAW,EAAEK,QAAQ,CAACI,mBAAoB;UAC1CC,KAAK,EAAErG,QAAS;UAChBqF,KAAK,EAAE;YAAExB,KAAK,EAAE,EAAE;YAAEC,MAAM,EAAE;UAAG;QAAE,GAR5BkC,QAAQ,CAACM,IASf,CAAC;MAAA,CACH,CAAC;IAAA,CACO,CAAC,EACVtI,KAAA,CAACd,IAAI;MAACmI,KAAK,EAAE7B,MAAM,CAACO,eAAgB;MAAAuB,QAAA,GAClCxH,IAAA,CAACL,SAAS;QAAC8I,QAAQ,EAAEnE;MAAoB,CAAE,CAAC,EAC5CtE,IAAA,CAACZ,IAAI;QAACmI,KAAK,EAAE7B,MAAM,CAACc,YAAa;QAAAgB,QAAA,EAC9BtG,aAAa,CAAC4E,GAAG,CAAC,UAACV,MAAM;UAAA,OACxBpF,IAAA,CAACT,gBAAgB;YAEfgI,KAAK,EAAE,CACL7B,MAAM,CAACoB,YAAY,EACnB1B,MAAM,KAAKzD,gBAAgB,IAAI+D,MAAM,CAAC4B,oBAAoB,CAC1D;YACFS,OAAO,EAAE,SAAAA,QAAA;cAAA,OAAM5C,kBAAkB,CAACC,MAAM,CAAC;YAAA,CAAC;YAAAoC,QAAA,EAE1CxH,IAAA,CAACV,IAAI;cACHiI,KAAK,EAAE,CACL7B,MAAM,CAACuB,cAAc,EACrB7B,MAAM,KAAKzD,gBAAgB,IAAI+D,MAAM,CAAC2B,sBAAsB,CAC5D;cAAAG,QAAA,EAEDpC,MAAM,CAACwC;YAAY,CAChB;UAAC,GAdFxC,MAAM,CAAC6C,QAeI,CAAC;QAAA,CACpB;MAAC,CACE,CAAC;IAAA,CACH,CAAC;EAAA,CACH,CAAC;AAIX,CAAC;AAED,eAAevH,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}